{"ts":1368234811688,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/* global OJ:true, window:true, Ext:true */\n\n(function _columnIIFE(){\n\n    /**\n     * Ext xtypes constant. Possible values: 'checkcolumn', 'actioncolumn', 'gridcolumn'\n    */\n    var xtypes = Object.create(null);\n    xtypes.checkcolumn = 'checkcolumn';\n    xtypes.gridcolumn = 'gridcolumn';\n    xtypes.actioncolumn = 'actioncolumn';\n\n    /*\n     * The constant is immutable\n    */\n    Object.seal(xtypes);\n    Object.freeze(xtypes);\n\n    OJ.constants.lift('xtypes', xtypes);\n\n    /**\n     * Private column constructor class\n     * @param xtyle {OJ.constants.xtype} [xtype=OJ.constants.xtypes.gridcolumn] The type of column\n     * @param sortable {Boolean} [sortable=true] Is Column Sortable\n     * @param text {String} Column name\n     * @param flex {Number} [flex=0.125] relative Column width\n     * @param menuDisabled {Boolean} [menuDisabled=false] Is Menu disabled?\n     * @param dataIndex {String} [dataIndex=text] Unique Index Id for the column\n     * @param editor {String} If the column is editable, type of editor\n    */\n    var Column = function (xtype, sortable, text, flex, menuDisabled, dataIndex, editor) {\n        var that = this;\n\n        if(-1 === Object.keys(OJ.constants.xtypes).indexOf(xtype)) {\n            xtype = OJ.constants.xtypes.gridcolumn;\n        }\n        if(!text) {\n            throw new Error('Text is required for column construction.');\n        }\n\n        Object.defineProperties(that, {\n            xtype: {\n                value: xtype,\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            sortable: {\n                value: false !== sortable,\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            text: {\n                value: text || '',\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            flex: {\n                value: flex || 0.125,\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            menuDisabled: {\n                value: false !== menuDisabled,\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            dataIndex: {\n                value: dataIndex || text.toLowerCase(),\n                writable: true,\n                configurable: true,\n                enumerable: true\n            }\n        });\n        if(editor) {\n            Object.defineProperties(that, {\n                editor: {\n                    value: editor,\n                    writable: true,\n                    configurable: true,\n                    enumerable: true\n                }\n            })\n        }\n\n        return that;\n    };\n\n    OJ.instanceof.lift('Column', Column);\n\n    /**\n     * Create a column definition.\n     * @param def {Object} Possible property members: def.xtype, def.sortable, def.text, def.flex, def.menuDisabled, def.dataIndex, def.editor\n    */\n    OJ.columns.lift('column', function (def){\n        if(!def) {\n            throw new Error('Cannot create a column without parameters');\n        }\n        var ret = new Column(def.xtype, def.sortable, def.text, def.flex, def.menuDisabled, def.dataIndex, def.editor)\n        return ret;\n    });\n\n\n    }());"]],"start1":0,"start2":0,"length1":0,"length2":3372}]],"length":3372}
{"contributors":[],"silentsave":true,"ts":1368234882414,"patch":[[{"diffs":[[1,"/* jshint undef: true, unused: true */\n"],[0,"/* globa"]],"start1":0,"start2":0,"length1":8,"length2":47},{"diffs":[[0,"ue, Ext:true"],[1,", $: true"],[0," */\n\n(functi"]],"start1":67,"start2":67,"length1":24,"length2":33}]],"length":3420,"saved":false}
{"contributors":[],"silentsave":true,"ts":1368457356587,"patch":[[{"diffs":[[0,"nction _"],[-1,"column"],[1,"grid"],[0,"IIFE(){\n"]],"start1":96,"start2":96,"length1":22,"length2":20}]],"length":3418,"saved":false}
{"ts":1368458898971,"patch":[[{"diffs":[[0,"    "],[-1,"/**\n     * Ext xtypes constant. Possible values: 'checkcolumn', 'actioncolumn', 'gridcolumn'\n    */\n    var xtypes = Object.create(null);\n    xtypes.checkcolumn = 'checkcolumn';\n    xtypes.gridcolumn = 'gridcolumn';\n    xtypes.actioncolumn = 'actioncolumn';\n\n    /*\n     * The constant is immutable\n    */\n    Object.seal(xtypes);\n    Object.freeze(xtypes);"],[0,"\n\n  "]],"start1":117,"start2":117,"length1":365,"length2":8}]],"length":3061,"saved":false}
{"ts":1368458910075,"patch":[[{"diffs":[[0,"  \n\n"],[-1,"    OJ.constants.lift('xtypes', xtypes);\n\n    /**\n     * Private column constructor class\n     * @param xtyle {OJ.constants.xtype} [xtype=OJ.constants.xtypes.gridcolumn] The type of column\n     * @param sortable {Boolean} [sortable=true] Is Column Sortable\n     * @param text {String} Column name\n     * @param flex {Number} [flex=0.125] relative Column width\n     * @param menuDisabled {Boolean} [menuDisabled=false] Is Menu disabled?\n     * @param dataIndex {String} [dataIndex=text] Unique Index Id for the column\n     * @param editor {String} If the column is editable, type of editor\n    */\n    var Column = function (xtype, sortable, text, flex, menuDisabled, dataIndex, editor) {\n        var that = this;\n\n        if(-1 === Object.keys(OJ.constants.xtypes).indexOf(xtype)) {\n            xtype = OJ.constants.xtypes.gridcolumn;\n        }\n        if(!text) {\n            throw new Error('Text is required for column construction.');\n        }\n\n        Object.defineProperties(that, {\n            xtype: {\n                value: xtype,\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            sortable: {\n                value: false !== sortable,\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            text: {\n                value: text || '',\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            flex: {\n                value: flex || 0.125,\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            menuDisabled: {\n                value: false !== menuDisabled,\n                writable: true,\n                configurable: true,\n                enumerable: true\n            },\n            dataIndex: {\n                value: dataIndex || text.toLowerCase(),\n                writable: true,\n                configurable: true,\n                enumerable: true\n            }\n        });\n        if(editor) {\n            Object.defineProperties(that, {\n                editor: {\n                    value: editor,\n                    writable: true,\n                    configurable: true,\n                    enumerable: true\n                }\n            })\n        }\n\n        return that;\n    };\n\n    OJ.instanceof.lift('Column', Column);\n\n    /**\n     * Create a column definition.\n     * @param def {Object} Possible property members: def.xtype, def.sortable, def.text, def.flex, def.menuDisabled, def.dataIndex, def.editor\n    */\n    OJ.columns.lift('column', function (def){\n        if(!def) {\n            throw new Error('Cannot create a column without parameters');\n        }\n        var ret = new Column(def.xtype, def.sortable, def.text, def.flex, def.menuDisabled, def.dataIndex, def.editor)\n        return ret;\n    });\n"],[0,"\n\n  "]],"start1":119,"start2":119,"length1":2935,"length2":8}]],"length":134,"saved":false}
{"ts":1368458912664,"patch":[[{"diffs":[[0,"IFE(){\n\n"],[-1,"    "],[0,"\n\n\n\n    "]],"start1":109,"start2":109,"length1":20,"length2":16}]],"length":130,"saved":false}
