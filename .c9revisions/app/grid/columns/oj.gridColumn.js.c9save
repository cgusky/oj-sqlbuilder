{"ts":1368230111586,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/* global OJ:true, window:true, Ext:true */\n\n(function _gridColumnIIFE(){\n\n    /**\n     * Private grid column class constructor\n    */\n    var GridColumn = function (text, editor, flex) {\n        var that = OJ.columns.column({\n                xtype: OJ.constants.xtypes.gridcolumn,\n                flex: flex || 0.125,\n                editor: editor,\n                text: text\n            });\n\n        return that;\n    };\n\n    OJ.instanceof.lift('GridColumn', GridColumn);\n\n    /**\n     * Create a check column\n     * @param sortable {Boolean} [sortable=true] Is Column Sortable\n     * @param text {String} Column Name\n     * @param menuDisabled {Boolean} [menuDisabled=false] Is Menu Disabled\n     * @param flex {Number} [flex=0.125] Relative width of the column\n     * @param editor {String} If column is editable, the type of editor\n    */\n    OJ.columns.lift('gridColumn', function (sortable, text, menuDisabled, flex, editor){\n        if(arguments.length === 0) {\n            throw new Error('Cannot create a column without parameters');\n        }\n\n        var ret = new GridColumn(text, editor, flex);\n        ret.menuDisabled = menuDisabled;\n        ret.sortable = sortable;\n        return ret;\n    });\n\n\n    }());"]],"start1":0,"start2":0,"length1":0,"length2":1222}]],"length":1222}
