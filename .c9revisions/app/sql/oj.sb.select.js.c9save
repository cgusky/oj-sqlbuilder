{"ts":1367457263846,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/* global window:true, Ext:true */\n\n(function() {\n\n    Ext.define('Ext.oj-sqlbuilder.SQLFieldsModel', {\n        extend: 'Ext.data.Model',\n        fields: [{\n            name: 'id',\n            type: 'string'\n        }, {\n            name: 'tableName',\n            type: 'string'\n        }, {\n            name: 'tableId',\n            type: 'string'\n        }, {\n            name: 'extCmpId',\n            type: 'string'\n        }, {\n            name: 'tableAlias',\n            type: 'string'\n        }, {\n            name: 'field',\n            type: 'string'\n        }, {\n            name: 'output',\n            type: 'boolean'\n        }, {\n            name: 'expression',\n            type: 'string'\n        }, {\n            name: 'aggregate',\n            type: 'string'\n        }, {\n            name: 'alias',\n            type: 'string'\n        }, {\n            name: 'sortType',\n            type: 'string'\n        }, {\n            name: 'sortOrder',\n            type: 'int'\n        }, {\n            name: 'grouping',\n            type: 'boolean'\n        }, {\n            name: 'criteria',\n            type: 'string'\n        }]\n    });\n\n}());"]],"start1":0,"start2":0,"length1":0,"length2":1140}]],"length":1140}
{"contributors":[],"silentsave":true,"ts":1367457333997,"patch":[[{"diffs":[[0,") {\n\n   "],[-1," "],[0,"Ext.defi"]],"start1":46,"start2":46,"length1":17,"length2":16},{"diffs":[[0,".SQL"],[-1,"FieldsModel', {\n        extend: 'Ext.data.Model',"],[1,"Select', {\n    config: {\n        tables: '',\n        fields: '',\n        joins: ''\n    },\n    constructor: function(){\n\n        this.tables = Ext.create('Ext.oj-sqlbuilder.SQLTableStore', {\n            storeId: 'SQLTableStore'\n        });\n\n        // handle all updates on sql tables\n        this.tables.on('update', this.handleSQLTableUpdate, this);\n        this.tables.on('add', this.handleSQLTableAdd, this);\n        this.tables.on('remove', this.handleSQLTableRemove, this);\n"],[0,"\n   "]],"start1":83,"start2":83,"length1":57,"length2":487},{"diffs":[[0,"    "],[1,"this."],[0,"fields"],[-1,": [{\n            name: 'id',\n            type: 'string'\n        }, {\n            name: 'tableName',\n            type: 'string'\n        }, {\n            name: 'tableId',\n            type: 'string'\n        }, {\n            name: 'extCmpId',\n            type: 'string'\n        }, {\n            name: "],[1," = Ext.create('Ext.oj-sqlbuilder.SQLFieldsStore', {\n            storeId: 'SQLFieldsStore'\n        });\n\n        this.fields.on('update', this.handleSQLFieldChanges, this);\n        this.fields.on('remove', this.handleSQLFieldRemove, this);\n\n        this.joins = Ext.create('Ext.oj-sqlbuilder.JoinStore', {\n            storeId: 'JoinStore'\n        });\n\n        // this.joins.on('update', this.handleSQLJoinChanges, this);\n        this.joins.on('add', this.handleSQLJoinChanges, this);\n        this.joins.on('remove', this.handleSQLJoinChanges, this);\n\n        this.callParent(arguments);\n    },\n    handleSQLTableUpdate: function(tableStore, table, operation){\n        if (operation == 'commit') {\n            this.updateFieldTableData(table);\n            this.updateJoinTableData(table);\n            this.updateSQLOutput();\n        }\n    },\n    handleSQLTableAdd: function(tableStore, table, index){\n        this.updateSQLOutput();\n    },\n    handleSQLTableRemove: function(tableStore, table, index){\n        var aJoins = [];\n        // get table joins and remove them\n        aJoins = this.getJoinsByTableId(table.get('id'));\n        // loop over the joins array\n        for (var i = 0, l = aJoins.length; i < l; i++) {\n            // remove join from store\n            this.removeJoinById(aJoins[i].get('id'));\n        }\n        this.updateSQLOutput();\n    },\n    handleSQLJoinChanges: function(joinStore, join){\n        this.updateSQLOutput();\n    },\n    updateFieldTableData: function(table){\n        var tableId, expression, tableAlias, tableName;\n        tableId = table.get('id');\n        tableAlias = table.get('tableAlias');\n        tableName = table.get('tableName');\n        // loop over all fields of the fields store\n        this.fields.each(function(field){\n            // check if current field belongs to sql table\n            if (field.get('tableId') == tableId) {\n                if (tableAlias != '') {\n                    // we have a table alias\n                    expression = tableAlias + '.' + field.get('field');\n                }\n                else {\n                    // no table alias\n                    expression = tableName + '.' + field.get('field');\n                };\n                field.beginEdit();\n                // update the field table alias\n                field.set('tableAlias', tableAlias);\n                // update the field expression\n                field.set('expression', expression);\n                field.commit(true);\n                field.endEdit();\n            }\n        });\n        return;\n    },\n    updateJoinTableData: function(table){\n        var joins, tableId;\n        tableId = table.get('id');\n        joins = this.getJoinsByTableId(tableId);\n        for (var i = 0, rightTable, leftTable, joinCondition = '',l = joins.length; i < l; i++) {\n            leftTable = this.getTableById(joins[i].get('leftTableId'));\n            rightTable = this.getTableById(joins[i].get('rightTableId'));\n\n            if (leftTable.get('tableAlias') != '') {\n                joinCondition = joinCondition + leftTable.get('tableAlias') + '.' + joins[i].get('leftTableField') + '=';\n            }\n            else {\n                joinCondition = joinCondition + leftTable.get('tableName') + '.' + joins[i].get('leftTableField') + '=';\n            }\n\n            if (rightTable.get('tableAlias') != '') {\n                joinCondition = joinCondition + rightTable.get('tableAlias') + '.' + joins[i].get('rightTableField');\n            }\n            else {\n                joinCondition = joinCondition + rightTable.get('tableName') + '.' + joins[i].get('rightTableField');\n            }\n            joins[i].beginEdit();\n            joins[i].set('joinCondition', joinCondition);\n            joins[i].commit(true);\n            joins[i].endEdit();\n        }\n    },\n    handleSQLFieldChanges: function(fieldStore, model, operation){\n        if (operation == 'commit') {\n            this.updateSQLOutput();\n        }\n    },\n    handleSQLFieldRemove: function(fieldStore){\n        this.updateSQLOutput();\n    },\n    updateSQLOutput: function(){\n        var sqlOutput, sqlHTML, sqlQutputPanel;\n        sqlOutput = this.toString();\n        sqlHTML = '<pre class=\"brush: sql\">' + sqlOutput + '</pre>';\n        sqlQutputPanel = Ext.getCmp('SQLOutputPanel');\n\n        sqlQutputPanel.update(sqlHTML);\n    },\n    sortTablesByJoins: function(tables, oUsedTables){\n        var aTables = [], aJoins = [], oUsedTables = oUsedTables ||\n        {};\n        // loop over tables\n        for (var i = 0, aCondition = [], aJoin, l = tables.length; i < l; i++) {\n            // check if current table is a new one\n            if (!oUsedTables.hasOwnProperty(tables[i].get('id'))) {\n                // it is a new one\n                aTables.push(tables[i]);\n                // mark table as used\n                oUsedTables[tables[i].get('id')] = true;\n                // get any joins for the current table\n                aJoin = this.getJoinsByTableId(tables[i].get('id'));\n                // loop over the join tables\n                for (var j = 0, joinTable, len = aJoin.length; j < len; j++) {\n                    // check if it is a new join\n                    if (!oUsedTables.hasOwnProperty(aJoin[j].get('id'))) {\n                        // mark join as used\n                        oUsedTables[aJoin[j].get('id')] = true;\n                        if (tables[i].get('id') != aJoin[j].get('leftTableId')) {\n                            joinTable = this.getTableById(aJoin[j].get('leftTableId'));\n                            this.changeLeftRightOnJoin(aJoin[j]);\n                        }\n                        else {\n                            joinTable = this.getTableById(aJoin[j].get('rightTableId'));\n                        }\n                        oTemp = this.sortTablesByJoins([joinTable], oUsedTables);\n                        oUsedTables = oTemp.oUsedTables;\n                        aTables = aTables.concat(oTemp.aTables);\n                    }\n                }\n            }\n        }\n\n        return {\n            aTables: aTables,\n            oUsedTables: oUsedTables\n        };\n    },\n    changeLeftRightOnJoin: function(join){\n        var leftTable, leftTableField, rightTable, rightTableField, joinCondition = '';\n        // prepare new data\n        leftTable = this.getTableById(join.get('rightTableId'));\n        leftTableField = join.get('rightTableField');\n        rightTable = this.getTableById(join.get('leftTableId'));\n        rightTableField = join.get('leftTableField');\n\n        // construct new joinCondition\n        if (leftTable.get('tableAlias') != '') {\n            joinCondition = joinCondition + leftTable.get('tableAlias') + '.' + join.get('rightTableField') + '=';\n        }\n        else {\n            joinCondition = joinCondition + leftTable.get('tableName') + '.' + join.get('rightTableField') + '=';\n        }\n\n        if (rightTable.get("],[0,"'tab"]],"start1":571,"start2":571,"length1":311,"length2":6939},{"diffs":[[0,"'tableAlias'"],[-1,","],[1,") != '') {"],[0,"\n           "]],"start1":7506,"start2":7506,"length1":25,"length2":34},{"diffs":[[0,"    "],[-1,"type: 'string'\n        }, {\n            name: 'field',\n            type: 'string'\n        }, {\n            name: 'output',\n            type: 'boolean'\n        }, {\n            name: 'expression',\n            type: 'string'\n        },"],[1,"joinCondition = joinCondition + rightTable.get('tableAlias') + '.' + join.get('leftTableField');\n        }\n        else {\n            joinCondition = joinCondition + rightTable.get('tableName') + '.' + join.get('leftTableField');\n        }\n\n        // start transaction\n        join.beginEdit();\n        // change left and right join table data\n        join.set('leftTableId', leftTable.get('id'));\n        join.set('leftTableField', leftTableField);\n        join.set('rightTableId', rightTable.get('id'));\n        join.set('rightTableField', rightTableField);\n        join.set('joinCondition', joinCondition);\n        // silent commit without firing store events\n        // this prevents endless loop\n        join.commit(true);\n        join.endEdit();\n        // end transaction\n        return;\n    },\n    toString: function(){\n        var sqlOutput = 'SELECT ', aJoins = [], aOutputFields = [], oJoinTables = {}, aTables = [], aJoinTables = [], aCriteriaFields = [], aGroupFields = [], aOrderFields = [], selectFieldsSQL = '', fromSQL = '', aFromSQL = [], criteriaSQL = '', orderBySQL = '', groupBySQL = '', fieldSeperator = ', ', joinSQL = '', bFirst = true, bPartOfJoin = false;\n        this.fields.each(function(field){\n            // should the field be a part of the output\n            if (field.get('output')) {\n                aOutputFields.push(field);\n            }\n            // any criteria\n            if (field.get('criteria') != '') {\n                aCriteriaFields.push(field);\n            }\n            // check for grouping\n            if (field.get('grouping')) {\n                aGroupFields.push(field);\n            }\n            // check for sorting\n            if (field.get('sortType') != '') {\n                aOrderFields.push(field);\n            }\n        });\n\n        // tables\n        // sorting of tables\n        this.tables.each(function(table){\n            aTables.push(table);\n        });\n\n        aTables = this.sortTablesByJoins(aTables).aTables;\n\n\n        this.joins.each(function(join){\n            aJoins.push(join);\n        });\n\n        //create fromSQL\n        for (var k = 0, aJoin = [], oJoinTables = {}, joinCondition = '', joinType, leftTable, rightTable, l = aTables.length; k < l; k++) {\n            if (k == aTables.length - 1) {\n                fieldSeperator = '';\n            }\n            else {\n                fieldSeperator = ', ';\n            };\n\n            // is the current table the first one\n            if (bFirst) {\n                // yes it is the first\n\n                // table id merken\n                oJoinTables[aTables[k].get('id')] = true;\n\n                bFirst = false;\n\n                // check if current table is not the last one in the loop\n                if ((k + 1) < aTables.length) {\n                    // get joins where joins leftTableID is a property of oJoinTables and joins rightTableID equal to aTables[i+1].get('id')\n                    for (var h = 0, len = aJoins.length; h < len; h++) {\n                        if (oJoinTables.hasOwnProperty(aJoins[h].get('leftTableId')) && aJoins[h].get('rightTableId') == aTables[k + 1].get('id')) {\n                            aJoin.push(aJoins[h]);\n                        }\n                        if (oJoinTables.hasOwnProperty(aJoins[h].get('rightTableId')) && aJoins[h].get('leftTableId') == aTables[k + 1].get('id')) {\n                            this.changeLeftRightOnJoin(aJoins[h]);\n                            aJoin.push(aJoins[h]);\n                        }\n                    }\n\n                    // check if we have a join\n                    if (aJoin.length > 0) {\n                        // yes we have a join between aTables[k] and aTables[k+1] with at least one join condition\n\n                        leftTable = aTables[k];\n                        rightTable = aTables[k + 1];\n\n                        // table id merken\n                        oJoinTables[rightTable.get('id')] = true;\n\n                        for (var j = 0, fieldSeperator = '', ln = aJoin.length; j < ln; j++) {\n                            if (j == aJoin.length - 1) {\n                                fieldSeperator = '';\n                            }\n                            else {\n                                fieldSeperator = '\\nAND ';\n                            };\n                            joinType = aJoin[j].get('joinType');\n                            joinCondition = joinCondition + aJoin[j].get('joinCondition') + fieldSeperator;\n                        }\n\n                        // reset the join array\n                        aJoin = [];\n\n                        if (joinSQL != '') {\n                            joinSQL = joinSQL + ',\\n';\n                        }\n\n                        if (leftTable.get('tableAlias') != '') {\n                            // we have an leftTable alias\n                            joinSQL = joinSQL + leftTable.get('tableName') + ' ' + leftTable.get('tableAlias') + ' ' + joinType + ' JOIN ';\n                        }\n                        else {\n                            //no alias\n                            joinSQL = joinSQL + leftTable.get('tableName') + ' ' + joinType + ' JOIN ';\n                        }\n\n                        if (rightTable.get('tableAlias') != '') {\n                            // we have an rightTable alias\n                            joinSQL = joinSQL + rightTable.get('tableName') + ' ' + rightTable.get('tableAlias') + ' ON ' + joinCondition;\n                        }\n                        else"],[0," {\n "]],"start1":7537,"start2":7537,"length1":241,"length2":5533},{"diffs":[[0,"    "],[1," "],[-1,"name: 'aggregate',\n            type: 'string'\n        }, {\n            name: 'alias',\n            type: 'string'\n        }, {\n            name: 'sortType',\n            type: 'string'\n        },"],[1,"               //no alias\n                            joinSQL = joinSQL + rightTable.get('tableName') + ' ON ' + joinCondition;\n                        }\n\n                        // clear joinCondition\n                        joinCondition = '';\n\n                    }\n                    else {\n                        // no join between aTables[i+1] and the one before\n                        bFirst = true;\n                        oJoinTables = {};\n                        // check for tableAlias\n                        if (aTables[k].get('tableAlias') != '') {\n                            fromSQL = aTables[k].get('tableName') + ' ' + aTables[k].get('tableAlias');\n                        }\n                        else {\n                            fromSQL = aTables[k].get('tableName');\n                        }\n                        aFromSQL.push(fromSQL);\n                    }\n                }\n                else {\n                    // its the last and only one in the loop\n                    // check for tableAlias\n                    if (aTables[k].get('tableAlias') != '') {\n                        fromSQL = aTables[k].get('tableName') + ' ' + aTables[k].get('tableAlias');\n                    }\n                    else {\n                        fromSQL = aTables[k].get('tableName');\n                    }\n                    aFromSQL.push(fromSQL);\n                }\n            }\n            else {\n                // no, it is not the first table\n\n                bFirst = true;\n\n                // check if current table is not the last one in the loop\n                if ((k + 1) < aTables.length) {\n                    // get joins where joins leftTableID is a property of oJoinTables and joins rightTableID equal to aTables[i+1].get('id')\n                    for (var h = 0, len = aJoins.length; h < len; h++) {\n                        if (oJoinTables.hasOwnProperty(aJoins[h].get('leftTableId')) && aJoins[h].get('rightTableId') == aTables[k + 1].get('id')) {\n                            aJoin.push(aJoins[h]);\n                        }\n                        if (oJoinTables.hasOwnProperty(aJoins[h].get('rightTableId')) && aJoins[h].get('leftTableId') == aTables[k + 1].get('id')) {\n                            this.changeLeftRightOnJoin(aJoins[h]);\n                            aJoin.push(aJoins[h]);\n                        }\n                    }\n\n                    // check if we have a join\n                    if (aJoin.length > 0) {\n                        // yes we have a join between aTables[k] and aTables[k+1] with at least one join condition\n\n                        rightTable = aTables[k + 1];\n\n                        // table id merken\n                        oJoinTables[rightTable.get('id')] = true;\n\n                        for (var j = 0, fieldSeperator = '', ln = aJoin.length; j < ln; j++) {\n                            if (j == aJoin.length - 1) {\n                                fieldSeperator = '';\n                            }\n                            else {\n                                fieldSeperator = '\\nAND ';\n                            };\n                            joinType = aJoin[j].get('joinType');\n                            joinCondition = joinCondition + aJoin[j].get('joinCondition') + fieldSeperator;\n                        }\n\n                        // reset the join array\n                        aJoin = [];\n\n                        bFirst = false;\n\n                        if (rightTable.get('tableAlias') != '') {\n                            // we have an rightTable alias\n                            joinSQL = joinSQL + '\\n' + joinType + ' JOIN ' + rightTable.get('tableName') + ' ' + rightTable.get('tableAlias') + ' ON ' + joinCondition;\n                        }\n                        else {\n                            //no alias\n                            joinSQL = joinSQL + '\\n' + joinType + ' JOIN ' + rightTable.get('tableName') + ' ON ' + joinCondition;\n                        }\n\n                        // clear joinCondition\n                        joinCondition = '';\n                    }\n                    else {\n                        bFirst = true;\n                        oJoinTables = {};\n                    }\n                }\n                else {\n                    // its the last and only one\n                    // check for tableAlias\n                    oJoinTables = {};\n                }\n            }\n        }\n\n        fromSQL = aFromSQL.join(', ');\n\n        if (joinSQL != '' && fromSQL != '') {\n            joinSQL = joinSQL + ', ';\n        }\n\n        fromSQL = '\\nFROM ' + joinSQL + fromSQL;\n\n        // output fields\n        for (var i = 0, l = aOutputFields.length; i < l; i++) {\n            // check if it is the last array member\n            if (i == aOutputFields.length - 1) {\n                fieldSeperator = '';\n            }\n            else {\n                fieldSeperator = ', ';\n            };\n            // yes, output\n            // check alias\n            if (aOutputFields[i].get('alias') != '') {\n                // yes, we have an field alias\n                selectFieldsSQL = selectFieldsSQL + aOutputFields[i].get('expression') + ' AS ' + aOutputFields[i].get('alias') + fieldSeperator;\n            }\n            else {\n                // no field alias\n                selectFieldsSQL = selectFieldsSQL + aOutputFields[i].get('expression') + fieldSeperator;\n            }\n        }\n\n        // criteria\n        for (var i = 0, l = aCriteriaFields.length; i < l; i++) {\n            if (i == 0) {\n                criteriaSQL = criteriaSQL + '\\nWHERE ';\n            }\n            else"],[0," {\n "]],"start1":13077,"start2":13077,"length1":201,"length2":5654},{"diffs":[[0,"    "],[1,"  "],[-1,"name: 'sortOrder',\n            type: 'int'\n        }, {\n            name: 'grouping',\n            type: 'boolean'\n        }, {\n            name: 'criteria',\n            type: 'string'\n        }]\n    "],[1,"  criteriaSQL = criteriaSQL + 'AND ';\n            }\n            if (i == aCriteriaFields.length - 1) {\n                fieldSeperator = '';\n            }\n            else {\n                fieldSeperator = '\\n';\n            }\n            criteriaSQL = criteriaSQL + aCriteriaFields[i].get('expression') + ' ' + aCriteriaFields[i].get('criteria') + fieldSeperator;\n        }\n\n        // group by\n        for (var i = 0, l = aGroupFields.length; i < l; i++) {\n            // check if it is the last array member\n            if (i == aGroupFields.length - 1) {\n                fieldSeperator = '';\n            }\n            else {\n                fieldSeperator = ', ';\n            }\n            if (i == 0) {\n                groupBySQL = '\\nGROUP BY ';\n            }\n            groupBySQL = groupBySQL + aGroupFields[i].get('expression') + fieldSeperator;\n        }\n\n        // order by\n        for (var i = 0, l = aOrderFields.length; i < l; i++) {\n            // check if it is the last array member\n            if (i == aOrderFields.length - 1) {\n                fieldSeperator = '';\n            }\n            else {\n                fieldSeperator = ', ';\n            }\n        }\n\n        return sqlOutput + selectFieldsSQL + fromSQL + criteriaSQL + groupBySQL + orderBySQL;\n    },\n    getJoinsByTableId: function(tableId){\n        var aReturn = [];\n        this.joins.each(function(join){\n            if (join.get('leftTableId') == tableId || join.get('rightTableId') == tableId) {\n                aReturn.push(join);\n            }\n        });\n        return aReturn;\n    },\n    removeTableById: function(tableID){\n        var table;\n        table = this.tables.getById(tableID);\n        this.tables.remove(table);\n    },\n    getTableById: function(tableID){\n        return this.tables.getById(tableID);\n    },\n    removeFieldById: function(id){\n        var field;\n        field = this.fields.getById(id);\n        this.fields.remove(field);\n    },\n    removeFieldsByTableId: function(tableId){\n        var aRecords = [];\n        this.fields.each(function(model){\n            if (model.get('tableId') == tableId) {\n                aRecords.push(model);\n            }\n        });\n        this.fields.remove(aRecords);\n    },\n    addTable: function(table){\n        this.tables.add(table);\n    },\n    addFieldRecord: function(record, bOutput){\n        var tableAlias, model, expression;\n        // get the tableAlias\n        tableAlias = this.getTableById(record.get('tableId')).get('tableAlias');\n        // build the expression\n        // check if the tableAlias is not an empty string\n        if (tableAlias != '') {\n            // alias is not an empty string\n            expression = tableAlias + '.' + record.get('field');\n        }\n        else {\n            // alias is an empty string\n            expression = record.get('tableName') + '.' + record.get('field');\n        };\n        // get a new field instance\n        model = this.getNewField();\n        // set the expression\n        model.set('expression', expression);\n        // set output to false per default\n        model.set('output', bOutput);\n        // set an id, so it is possible to remove rows if the associated table is removed\n        model.set('id', record.get('id'));\n        // set the field\n        model.set('field', record.get('field'));\n        // copy tableId to the new model instance\n        model.set('tableId', record.get('tableId'));\n        // copy cmp id of origin sqltable to the new model instance\n        model.set('extCmpId', record.get('extCmpId'));\n        this.addField(model);\n    },\n    addField: function(field){\n        this.fields.add(field);\n    },\n    getNewField: function(){\n        return Ext.create('Ext.oj-sqlbuilder.SQLFieldsModel');\n    },\n    removeJoinById: function(joinID){\n        var join;\n        join = this.joins.getById(joinID);\n        this.joins.remove(join);\n    },\n    addJoin: function(join){\n        this.joins.add(join);\n    },\n    arrayRemove: function(array, filterProperty, filterValue){\n        var aReturn;\n        aReturn = Ext.Array.filter(array, function(item){\n            var bRemove = true;\n            if (item[filterProperty] == filtervalue) {\n                bRemove = false;\n            }\n            return bRemove;\n        });\n        return aReturn\n    }\n"],[0,"});\n"]],"start1":18738,"start2":18738,"length1":207,"length2":4309}]],"length":23053,"saved":false}
{"ts":1367457336506,"patch":[[{"diffs":[[0,") {\n\n   "],[1," "],[0,"Ext.defi"]],"start1":46,"start2":46,"length1":16,"length2":17},{"diffs":[[0,"LSelect', {\n"],[1,"    "],[0,"    config: "]],"start1":87,"start2":87,"length1":24,"length2":28},{"diffs":[[0,"nfig: {\n"],[1,"    "],[0,"        "]],"start1":109,"start2":109,"length1":16,"length2":20},{"diffs":[[0,"'',\n        "],[1," "],[1,"   "],[0,"fields: '',\n"]],"start1":137,"start2":137,"length1":24,"length2":28},{"diffs":[[0,"'',\n        "],[1,"    "],[0,"joins: ''\n  "]],"start1":161,"start2":161,"length1":24,"length2":28},{"diffs":[[0,"ins: ''\n    "],[1,"   "],[1," "],[0,"},\n"],[1,"    "],[0,"    construc"]],"start1":179,"start2":179,"length1":27,"length2":35},{"diffs":[[0,"nction()"],[1," "],[0,"{\n\n"],[1,"    "],[0,"        "]],"start1":221,"start2":221,"length1":19,"length2":24},{"diffs":[[0,", {\n            "],[1,"    "],[0,"storeId: 'SQLTab"]],"start1":303,"start2":303,"length1":32,"length2":36},{"diffs":[[0,"eStore'\n        "],[1,"    "],[0,"});\n\n        // "]],"start1":340,"start2":340,"length1":32,"length2":36},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"// handl"]],"start1":365,"start2":365,"length1":16,"length2":20},{"diffs":[[0,"s on sql tables\n"],[1,"    "],[0,"        this.tab"]],"start1":397,"start2":397,"length1":32,"length2":36},{"diffs":[[0," this);\n        "],[1,"   "],[1," "],[0,"this.tables.on('"]],"start1":476,"start2":476,"length1":32,"length2":36},{"diffs":[[0,"ableAdd, this);\n"],[1,"    "],[0,"        this.tab"]],"start1":533,"start2":533,"length1":32,"length2":36},{"diffs":[[0,"Remove, this);\n\n"],[1,"    "],[0,"        this.fie"]],"start1":605,"start2":605,"length1":32,"length2":36},{"diffs":[[0,", {\n            "],[1,"    "],[0,"storeId: 'SQLFie"]],"start1":692,"start2":692,"length1":32,"length2":36},{"diffs":[[0,"sStore'\n        "],[1,"    "],[0,"});\n\n        thi"]],"start1":730,"start2":730,"length1":32,"length2":36},{"diffs":[[0,"   });\n\n        "],[1,"  "],[1,"  "],[0,"this.fields.on('"]],"start1":747,"start2":747,"length1":32,"length2":36},{"diffs":[[0," this);\n        "],[1,"   "],[1," "],[0,"this.fields.on('"]],"start1":819,"start2":819,"length1":32,"length2":36},{"diffs":[[0,"this);\n\n        "],[1,"   "],[1," "],[0,"this.joins = Ext"]],"start1":891,"start2":891,"length1":32,"length2":36},{"diffs":[[0,", {\n            "],[1,"    "],[0,"storeId: 'JoinSt"]],"start1":964,"start2":964,"length1":32,"length2":36},{"diffs":[[0,"nStore'\n        "],[1,"    "],[0,"});\n\n        // "]],"start1":997,"start2":997,"length1":32,"length2":36},{"diffs":[[0,");\n\n        "],[1," "],[1,"   "],[0,"// this.join"]],"start1":1018,"start2":1018,"length1":24,"length2":28},{"diffs":[[0," this);\n        "],[1,"    "],[0,"this.joins.on('a"]],"start1":1087,"start2":1087,"length1":32,"length2":36},{"diffs":[[0," this);\n        "],[1,"   "],[1," "],[0,"this.joins.on('r"]],"start1":1154,"start2":1154,"length1":32,"length2":36},{"diffs":[[0,");\n\n        "],[1,"    "],[0,"this.callPar"]],"start1":1229,"start2":1229,"length1":24,"length2":28},{"diffs":[[0,"arguments);\n"],[1,"    "],[0,"    },\n    h"]],"start1":1261,"start2":1261,"length1":24,"length2":28},{"diffs":[[0,"\n        },\n    "],[1," "],[1,"   "],[0,"handleSQLTableUp"]],"start1":1272,"start2":1272,"length1":32,"length2":36},{"diffs":[[0,"able, operation)"],[1," "],[0,"{\n"],[1,"    "],[0,"        if (oper"]],"start1":1336,"start2":1336,"length1":34,"length2":39},{"diffs":[[0,") {\n            "],[1," "],[1,"   "],[0,"this.updateField"]],"start1":1392,"start2":1392,"length1":32,"length2":36},{"diffs":[[0,"e);\n            "],[1,"    "],[0,"this.updateJoinT"]],"start1":1442,"start2":1442,"length1":32,"length2":36},{"diffs":[[0,"e);\n            "],[1,"   "],[1," "],[0,"this.updateSQLOu"]],"start1":1491,"start2":1491,"length1":32,"length2":36},{"diffs":[[0,"();\n        "],[-1,"}\n"],[1,"    }\n    "],[0,"    },\n"],[1,"    "],[0,"    handleSQ"]],"start1":1531,"start2":1531,"length1":33,"length2":45},{"diffs":[[0,"e, table, index)"],[1," "],[0,"{\n"],[1,"    "],[0,"        this.upd"]],"start1":1605,"start2":1605,"length1":34,"length2":39},{"diffs":[[0,"QLOutput();\n    "],[1," "],[-1,"},\n"],[1,"   },\n    "],[0,"    handleSQLTab"]],"start1":1648,"start2":1648,"length1":35,"length2":43},{"diffs":[[0,", index)"],[1," "],[0,"{\n      "]],"start1":1727,"start2":1727,"length1":16,"length2":17},{"diffs":[[0,") {\n        "],[1," "],[1,"   "],[0,"var aJoins ="]],"start1":1734,"start2":1734,"length1":24,"length2":28},{"diffs":[[0,"ar aJoins = [];\n"],[1,"    "],[0,"        // get t"]],"start1":1751,"start2":1751,"length1":32,"length2":36},{"diffs":[[0,"hem\n        "],[1,"   "],[1," "],[0,"aJoins = thi"]],"start1":1810,"start2":1810,"length1":24,"length2":28},{"diffs":[[0,"ble.get('id'));\n"],[1,"    "],[0,"        // loop "]],"start1":1860,"start2":1860,"length1":32,"length2":36},{"diffs":[[0,"s array\n        "],[1,"    "],[0,"for (var i = 0, "]],"start1":1909,"start2":1909,"length1":32,"length2":36},{"diffs":[[0,"            "],[1," "],[1,"   "],[0,"// remove jo"]],"start1":1978,"start2":1978,"length1":24,"length2":28},{"diffs":[[0," from store\n"],[1,"    "],[0,"            "]],"start1":2008,"start2":2008,"length1":24,"length2":28},{"diffs":[[0,"'id'));\n        "],[1,"   "],[1," "],[0,"}\n"],[1,"    "],[0,"        this.upd"]],"start1":2070,"start2":2070,"length1":34,"length2":42},{"diffs":[[0,"QLOutput();\n"],[1,"    "],[0,"    },\n"],[1,"    "],[0,"    handleSQ"]],"start1":2116,"start2":2116,"length1":31,"length2":39},{"diffs":[[0,"Store, join)"],[1," "],[0,"{\n"],[1,"    "],[0,"        this"]],"start1":2182,"start2":2182,"length1":26,"length2":31},{"diffs":[[0,"QLOutput();\n    "],[1," "],[-1,"},\n"],[1,"   },\n    "],[0,"    updateFieldT"]],"start1":2221,"start2":2221,"length1":35,"length2":43},{"diffs":[[0," function(table)"],[1," "],[0,"{\n        var ta"]],"start1":2273,"start2":2273,"length1":32,"length2":33},{"diffs":[[0,"able) {\n        "],[1," "],[1,"   "],[0,"var tableId, exp"]],"start1":2284,"start2":2284,"length1":32,"length2":36},{"diffs":[[0,"leName;\n        "],[1,"    "],[0,"tableId = table."]],"start1":2344,"start2":2344,"length1":32,"length2":36},{"diffs":[[0,"('id');\n        "],[1,"   "],[1," "],[0,"tableAlias = tab"]],"start1":2383,"start2":2383,"length1":32,"length2":36},{"diffs":[[0,"');\n        "],[1,"    "],[0,"tableName = "]],"start1":2437,"start2":2437,"length1":24,"length2":28},{"diffs":[[0,"t('tableName');\n"],[1,"    "],[0,"        // loop "]],"start1":2473,"start2":2473,"length1":32,"length2":36},{"diffs":[[0,"s store\n        "],[1,"    "],[0,"this.fields.each"]],"start1":2537,"start2":2537,"length1":32,"length2":36},{"diffs":[[0,"(function(field)"],[1," "],[0,"{\n"],[1,"    "],[0,"            // c"]],"start1":2573,"start2":2573,"length1":34,"length2":39},{"diffs":[[0,"ble\n            "],[1," "],[1,"   "],[0,"if (field.get('t"]],"start1":2651,"start2":2651,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"if (tableAlias !"]],"start1":2710,"start2":2710,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"// we have a tab"]],"start1":2758,"start2":2758,"length1":32,"length2":36},{"diffs":[[0,"e a table alias\n"],[1,"    "],[0,"                "]],"start1":2787,"start2":2787,"length1":32,"length2":36},{"diffs":[[0,"d.get('field');\n"],[1,"    "],[0,"                "]],"start1":2863,"start2":2863,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"else {\n"],[1,"    "],[0,"                "]],"start1":2901,"start2":2901,"length1":39,"length2":47},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"expression = tab"]],"start1":2974,"start2":2974,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"};\n"],[1,"    };\n   "],[0,"                "]],"start1":3045,"start2":3045,"length1":35,"length2":42},{"diffs":[[0,"            "],[1," "],[0,"field.beginE"]],"start1":3075,"start2":3075,"length1":24,"length2":25},{"diffs":[[0,"ld.beginEdit();\n"],[1,"    "],[0,"                "]],"start1":3091,"start2":3091,"length1":32,"length2":36},{"diffs":[[0,"eld table alias\n"],[1,"    "],[0,"                "]],"start1":3143,"start2":3143,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"// update the fi"]],"start1":3216,"start2":3216,"length1":32,"length2":36},{"diffs":[[0,"ield expression\n"],[1,"    "],[0,"                "]],"start1":3251,"start2":3251,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"field.commit"]],"start1":3328,"start2":3328,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"    "],[0,"field.endEdi"]],"start1":3368,"start2":3368,"length1":24,"length2":28},{"diffs":[[0,"();\n            "],[1,"   "],[1," "],[0,"}\n"],[1,"    "],[0,"        });\n    "]],"start1":3397,"start2":3397,"length1":34,"length2":42},{"diffs":[[0,"    });\n        "],[1,"    "],[0,"return;\n    },\n "]],"start1":3427,"start2":3427,"length1":32,"length2":36},{"diffs":[[0,"return;\n    "],[1," "],[-1,"},\n"],[1,"   },\n    "],[0,"    updateJo"]],"start1":3447,"start2":3447,"length1":27,"length2":35},{"diffs":[[0," function(table)"],[1," "],[0,"{\n        var jo"]],"start1":3494,"start2":3494,"length1":32,"length2":33},{"diffs":[[0,"able) {\n        "],[1,"  "],[1,"  "],[0,"var joins, table"]],"start1":3505,"start2":3505,"length1":32,"length2":36},{"diffs":[[0,"ableId;\n"],[1,"    "],[0,"        "]],"start1":3537,"start2":3537,"length1":16,"length2":20},{"diffs":[[0,"able.get('id');\n"],[1,"    "],[0,"        joins = "]],"start1":3568,"start2":3568,"length1":32,"length2":36},{"diffs":[[0,"bleId);\n        "],[1,"    "],[0,"for (var i = 0, "]],"start1":3629,"start2":3629,"length1":32,"length2":36},{"diffs":[[0,"on = '',"],[1," "],[0,"l = join"]],"start1":3699,"start2":3699,"length1":16,"length2":17},{"diffs":[[0,"; i < l; i++) {\n"],[1,"    "],[0,"            left"]],"start1":3724,"start2":3724,"length1":32,"length2":36},{"diffs":[[0,"));\n            "],[1,"    "],[0,"rightTable = thi"]],"start1":3812,"start2":3812,"length1":32,"length2":36},{"diffs":[[0,");\n\n            "],[1,"    "],[0,"if (leftTable.ge"]],"start1":3891,"start2":3891,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"joinCondition = "]],"start1":3952,"start2":3952,"length1":32,"length2":36},{"diffs":[[0,"=';\n            "],[-1,"}\n"],[1,"    }\n   "],[0,"            else"]],"start1":4074,"start2":4074,"length1":34,"length2":41},{"diffs":[[0,"\n               "],[1," "],[0,"else {\n"],[1,"    "],[0,"                "]],"start1":4095,"start2":4095,"length1":39,"length2":44},{"diffs":[[0,"=';\n            "],[1,"    "],[0,"}\n\n            i"]],"start1":4240,"start2":4240,"length1":32,"length2":36},{"diffs":[[0," }\n\n            "],[1," "],[1,"   "],[0,"if (rightTable.g"]],"start1":4259,"start2":4259,"length1":32,"length2":36},{"diffs":[[0,"lias') != '') {\n"],[1,"    "],[0,"                "]],"start1":4305,"start2":4305,"length1":32,"length2":36},{"diffs":[[0,"');\n            "],[1,"  "],[-1,"}\n"],[1,"  }\n    "],[0,"            else"]],"start1":4439,"start2":4439,"length1":34,"length2":42},{"diffs":[[0,"         else {\n"],[1,"    "],[0,"                "]],"start1":4468,"start2":4468,"length1":32,"length2":36},{"diffs":[[0,"');\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            join"]],"start1":4601,"start2":4601,"length1":34,"length2":42},{"diffs":[[0,"();\n            "],[1," "],[1,"   "],[0,"joins[i].set('jo"]],"start1":4657,"start2":4657,"length1":32,"length2":36},{"diffs":[[0,"n);\n            "],[1,"    "],[0,"joins[i].commit("]],"start1":4719,"start2":4719,"length1":32,"length2":36},{"diffs":[[0,"e);\n            "],[1,"   "],[1," "],[0,"joins[i].endEdit"]],"start1":4758,"start2":4758,"length1":32,"length2":36},{"diffs":[[0,"();\n        "],[-1,"}\n"],[1,"    }\n    "],[0,"    },\n"],[1,"    "],[0,"    handleSQ"]],"start1":4794,"start2":4794,"length1":33,"length2":45},{"diffs":[[0,"eration)"],[1," "],[0,"{\n"],[1,"    "],[0,"        "]],"start1":4884,"start2":4884,"length1":18,"length2":23},{"diffs":[[0,") {\n            "],[1," "],[1,"   "],[0,"this.updateSQLOu"]],"start1":4932,"start2":4932,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"}\n"],[1,"    }\n  "],[0,"    "],[1,"  "],[0,"},\n"],[1,"    "],[0,"    "]],"start1":4980,"start2":4980,"length1":17,"length2":29},{"diffs":[[0,"ldStore)"],[1," "],[0,"{\n      "]],"start1":5043,"start2":5043,"length1":16,"length2":17},{"diffs":[[0,"tore) {\n        "],[1,"   "],[1," "],[0,"this.updateSQLOu"]],"start1":5046,"start2":5046,"length1":32,"length2":36},{"diffs":[[0,"tput();\n    "],[-1,"},\n"],[1,"    },\n    "],[0,"    updateSQ"]],"start1":5082,"start2":5082,"length1":27,"length2":35},{"diffs":[[0,"tput: function()"],[1," "],[0,"{\n"],[1,"    "],[0,"        var sqlO"]],"start1":5120,"start2":5120,"length1":34,"length2":39},{"diffs":[[0,"        "],[1,"    "],[0,"sqlOutpu"]],"start1":5191,"start2":5191,"length1":16,"length2":20},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"sqlHTML "]],"start1":5232,"start2":5232,"length1":16,"length2":20},{"diffs":[[0,"/pre>';\n        "],[1,"    "],[0,"sqlQutputPanel ="]],"start1":5297,"start2":5297,"length1":32,"length2":36},{"diffs":[[0,"nel');\n\n        "],[1,"   "],[1," "],[0,"sqlQutputPanel.u"]],"start1":5357,"start2":5357,"length1":32,"length2":36},{"diffs":[[0,"lHTML);\n    "],[-1,"},\n"],[1,"    },\n    "],[0,"    sortTabl"]],"start1":5401,"start2":5401,"length1":27,"length2":35},{"diffs":[[0,"dTables)"],[1," "],[0,"{\n      "]],"start1":5468,"start2":5468,"length1":16,"length2":17},{"diffs":[[0,") {\n        "],[1,"    "],[0,"var aTables "]],"start1":5475,"start2":5475,"length1":24,"length2":28},{"diffs":[[0,"es = [],"],[-1," aJoins = [],"],[1,"\n                aJoins = [],\n               "],[0," oUsedTa"]],"start1":5500,"start2":5500,"length1":29,"length2":61},{"diffs":[[0,"s ||"],[1," {};"],[0,"\n     "],[-1,"   {};\n"],[0,"       "],[-1," "],[0,"// l"]],"start1":5578,"start2":5578,"length1":29,"length2":25},{"diffs":[[0,"oop over tables\n"],[1,"    "],[0,"        for (var"]],"start1":5603,"start2":5603,"length1":32,"length2":36},{"diffs":[[0,") {\n            "],[1,"    "],[0,"// check if curr"]],"start1":5700,"start2":5700,"length1":32,"length2":36},{"diffs":[[0,"one\n            "],[1," "],[1,"   "],[0,"if (!oUsedTables"]],"start1":5755,"start2":5755,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"    "],[0,"// it is a n"]],"start1":5835,"start2":5835,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"aTables.push(tab"]],"start1":5870,"start2":5870,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"// mark table as"]],"start1":5915,"start2":5915,"length1":32,"length2":36},{"diffs":[[0,"k table as used\n"],[1,"    "],[0,"                "]],"start1":5941,"start2":5941,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"// get any joins"]],"start1":6018,"start2":6018,"length1":32,"length2":36},{"diffs":[[0,"rrent table\n"],[1,"    "],[0,"            "]],"start1":6065,"start2":6065,"length1":24,"length2":28},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"// loop over the"]],"start1":6150,"start2":6150,"length1":32,"length2":36},{"diffs":[[0,"the join tables\n"],[1,"    "],[0,"                "]],"start1":6183,"start2":6183,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"// check if it i"]],"start1":6286,"start2":6286,"length1":32,"length2":36},{"diffs":[[0," a new join\n"],[1,"    "],[0,"            "]],"start1":6323,"start2":6323,"length1":24,"length2":28},{"diffs":[[0,"].get('id'))) {\n"],[1,"    "],[0,"                "]],"start1":6398,"start2":6398,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"oUsedTables[aJoi"]],"start1":6471,"start2":6471,"length1":32,"length2":36},{"diffs":[[0,"('id')] = true;\n"],[1,"    "],[0,"                "]],"start1":6515,"start2":6515,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"joinTable = this"]],"start1":6629,"start2":6629,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"this.changeLeftR"]],"start1":6721,"start2":6721,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"}\n"],[1,"    "],[0,"                "]],"start1":6787,"start2":6787,"length1":34,"length2":42},{"diffs":[[0,"         else {\n"],[1,"    "],[0,"                "]],"start1":6828,"start2":6828,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[-1,"}\n"],[1,"   }\n    "],[0,"                "]],"start1":6945,"start2":6945,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"oUsedTables = oT"]],"start1":7061,"start2":7061,"length1":32,"length2":36},{"diffs":[[0,"Tables;\n"],[1,"    "],[0,"        "]],"start1":7106,"start2":7106,"length1":16,"length2":20},{"diffs":[[0,"                "],[1,"    "],[0,"}\n              "]],"start1":7187,"start2":7187,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[-1,"}\n"],[1,"   }\n    "],[0,"            }\n  "]],"start1":7209,"start2":7209,"length1":34,"length2":42},{"diffs":[[0,"      }\n        "],[1,"  "],[1,"  "],[0,"}\n\n"],[1,"    "],[0,"        return {"]],"start1":7241,"start2":7241,"length1":35,"length2":43},{"diffs":[[0,"eturn {\n"],[1,"    "],[0,"        "]],"start1":7277,"start2":7277,"length1":16,"length2":20},{"diffs":[[0,"es,\n            "],[1,"    "],[0,"oUsedTables: oUs"]],"start1":7315,"start2":7315,"length1":32,"length2":36},{"diffs":[[0,"    "],[1,"    "],[0,"};\n    "],[1," "],[-1,"},\n"],[1,"   },\n    "],[0,"    "]],"start1":7364,"start2":7364,"length1":18,"length2":30},{"diffs":[[0,": function(join)"],[1," "],[0,"{\n"],[1,"    "],[0,"        var left"]],"start1":7415,"start2":7415,"length1":34,"length2":39},{"diffs":[[0,"        "],[1,"    "],[0,"// prepa"]],"start1":7526,"start2":7526,"length1":16,"length2":20},{"diffs":[[0,"ew data\n        "],[1,"   "],[1," "],[0,"leftTable = this"]],"start1":7550,"start2":7550,"length1":32,"length2":36},{"diffs":[[0,"ightTableId'));\n"],[1,"    "],[0,"        leftTabl"]],"start1":7611,"start2":7611,"length1":32,"length2":36},{"diffs":[[0,"ield');\n        "],[1,"    "],[0,"rightTable = thi"]],"start1":7677,"start2":7677,"length1":32,"length2":36},{"diffs":[[0,"eId'));\n        "],[1," "],[1,"   "],[0,"rightTableField "]],"start1":7746,"start2":7746,"length1":32,"length2":36},{"diffs":[[0,");\n\n        "],[1,"    "],[0,"// construct"]],"start1":7809,"start2":7809,"length1":24,"length2":28},{"diffs":[[0,"ndition\n        "],[1,"  "],[1,"  "],[0,"if (leftTable.ge"]],"start1":7848,"start2":7848,"length1":32,"length2":36},{"diffs":[[0,"lias') != '') {\n"],[1,"    "],[0,"            join"]],"start1":7893,"start2":7893,"length1":32,"length2":36},{"diffs":[[0,"eField') + '=';\n"],[1,"    "],[0,"        }\n      "]],"start1":8012,"start2":8012,"length1":32,"length2":36},{"diffs":[[0,"      }\n        "],[1,"    "],[0,"else {\n"],[1,"    "],[0,"            join"]],"start1":8034,"start2":8034,"length1":39,"length2":47},{"diffs":[[0," + '=';\n        "],[1," "],[-1,"}\n\n"],[1,"   }\n\n    "],[0,"        if (righ"]],"start1":8171,"start2":8171,"length1":35,"length2":43},{"diffs":[[0,"lias') != '') {\n"],[1,"    "],[0,"            join"]],"start1":8232,"start2":8232,"length1":32,"length2":36},{"diffs":[[0,"ield');\n        "],[-1,"}\n"],[1,"    }\n    "],[0,"        else {\n "]],"start1":8353,"start2":8353,"length1":34,"length2":42},{"diffs":[[0,"e {\n            "],[1,"    "],[0,"joinCondition = "]],"start1":8390,"start2":8390,"length1":32,"length2":36},{"diffs":[[0,"ield');\n        "],[-1,"}\n\n"],[1,"    }\n\n    "],[0,"        // start"]],"start1":8498,"start2":8498,"length1":35,"length2":43},{"diffs":[[0,"ion\n        "],[1,"    "],[0,"join.beginEd"]],"start1":8550,"start2":8550,"length1":24,"length2":28},{"diffs":[[0,"();\n        "],[1,"   "],[1," "],[0,"// change le"]],"start1":8580,"start2":8580,"length1":24,"length2":28},{"diffs":[[0," table data\n"],[1,"    "],[0,"        join"]],"start1":8625,"start2":8625,"length1":24,"length2":28},{"diffs":[[0,"'id'));\n        "],[1,"    "],[0,"join.set('leftTa"]],"start1":8687,"start2":8687,"length1":32,"length2":36},{"diffs":[[0,"Field);\n        "],[1," "],[1,"   "],[0,"join.set('rightT"]],"start1":8743,"start2":8743,"length1":32,"length2":36},{"diffs":[[0,"'id'));\n        "],[1,"    "],[0,"join.set('rightT"]],"start1":8803,"start2":8803,"length1":32,"length2":36},{"diffs":[[0,"Field);\n        "],[1,"   "],[1," "],[0,"join.set('joinCo"]],"start1":8861,"start2":8861,"length1":32,"length2":36},{"diffs":[[0,"joinCondition);\n"],[1,"    "],[0,"        // silen"]],"start1":8907,"start2":8907,"length1":32,"length2":36},{"diffs":[[0,"nts\n        "],[1,"    "],[0,"// this prev"]],"start1":8976,"start2":8976,"length1":24,"length2":28},{"diffs":[[0,"oop\n        "],[1," "],[1,"   "],[0,"join.commit("]],"start1":9018,"start2":9018,"length1":24,"length2":28},{"diffs":[[0,"e);\n        "],[1,"    "],[0,"join.endEdit"]],"start1":9049,"start2":9049,"length1":24,"length2":28},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"// end t"]],"start1":9081,"start2":9081,"length1":16,"length2":20},{"diffs":[[0,"    "],[1,"    "],[0,"return;\n"],[1,"    "],[0,"    },\n"],[1,"    "],[0,"    "]],"start1":9116,"start2":9116,"length1":23,"length2":35},{"diffs":[[0,"ring: function()"],[1," "],[0,"{\n"],[1,"    "],[0,"        var sqlO"]],"start1":9155,"start2":9155,"length1":34,"length2":39},{"diffs":[[0,"ELECT ',"],[-1," aJoins = [],"],[1,"\n                aJoins = [],\n               "],[0," aOutput"]],"start1":9204,"start2":9204,"length1":29,"length2":61},{"diffs":[[0,"Fields = [],"],[1,"\n               "],[0," oJoinTables"]],"start1":9265,"start2":9265,"length1":24,"length2":40},{"diffs":[[0,"Tables = [],"],[1,"\n               "],[0," aJoinTables"]],"start1":9313,"start2":9313,"length1":24,"length2":40},{"diffs":[[0,"es = [],"],[1,"\n               "],[0," aCriter"]],"start1":9351,"start2":9351,"length1":16,"length2":32},{"diffs":[[0,"ds = [],"],[1,"\n               "],[0," aGroupF"]],"start1":9389,"start2":9389,"length1":16,"length2":32},{"diffs":[[0,"ds = [],"],[1,"\n               "],[0," aOrderF"]],"start1":9424,"start2":9424,"length1":16,"length2":32},{"diffs":[[0,"ds = [],"],[1,"\n               "],[0," selectF"]],"start1":9459,"start2":9459,"length1":16,"length2":32},{"diffs":[[0," '',"],[-1," fromSQL = '', aFromSQL = [],"],[1,"\n                fromSQL = '',\n                aFromSQL = [],\n               "],[0," cri"]],"start1":9501,"start2":9501,"length1":37,"length2":85},{"diffs":[[0,"QL = '',"],[1,"\n               "],[0," orderBy"]],"start1":9592,"start2":9592,"length1":16,"length2":32},{"diffs":[[0,"QL = '',"],[1,"\n               "],[0," groupBy"]],"start1":9625,"start2":9625,"length1":16,"length2":32},{"diffs":[[0,"QL = '',"],[1,"\n               "],[0," fieldSe"]],"start1":9658,"start2":9658,"length1":16,"length2":32},{"diffs":[[0,", ',"],[-1," joinSQL = '', bFirst = true,"],[1,"\n                joinSQL = '',\n                bFirst = true,\n               "],[0," bPa"]],"start1":9701,"start2":9701,"length1":37,"length2":85},{"diffs":[[0,"OfJoin = false;\n"],[1,"    "],[0,"        this.fie"]],"start1":9788,"start2":9788,"length1":32,"length2":36},{"diffs":[[0,"(function(field)"],[1," "],[0,"{\n            //"]],"start1":9832,"start2":9832,"length1":32,"length2":33},{"diffs":[[0,"            "],[1," "],[1,"   "],[0,"// should th"]],"start1":9851,"start2":9851,"length1":24,"length2":28},{"diffs":[[0,"put\n            "],[1,"    "],[0,"if (field.get('o"]],"start1":9907,"start2":9907,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"aOutputFields.pu"]],"start1":9954,"start2":9954,"length1":32,"length2":36},{"diffs":[[0,"d);\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            // a"]],"start1":9997,"start2":9997,"length1":34,"length2":42},{"diffs":[[0,"ria\n            "],[1,"    "],[0,"if (field.get('c"]],"start1":10047,"start2":10047,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"aCriteriaFields."]],"start1":10102,"start2":10102,"length1":32,"length2":36},{"diffs":[[0,"d);\n            "],[1," "],[-1,"}\n"],[1,"   }\n    "],[0,"            // c"]],"start1":10147,"start2":10147,"length1":34,"length2":42},{"diffs":[[0,"ing\n            "],[1,"   "],[1," "],[0,"if (field.get('g"]],"start1":10203,"start2":10203,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"aGroupFields.pus"]],"start1":10252,"start2":10252,"length1":32,"length2":36},{"diffs":[[0,"ds.push(field);\n"],[1,"    "],[0,"            }\n  "]],"start1":10282,"start2":10282,"length1":32,"length2":36},{"diffs":[[0,"  }\n            "],[1,"    "],[0,"// check for sor"]],"start1":10312,"start2":10312,"length1":32,"length2":36},{"diffs":[[0,"for sorting\n"],[1,"    "],[0,"            "]],"start1":10341,"start2":10341,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"aOrderFields.pus"]],"start1":10404,"start2":10404,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"}\n"],[1,"    }\n   "],[0,"        "],[1," "],[0,"});\n\n"],[1,"    "],[0,"    "]],"start1":10458,"start2":10458,"length1":23,"length2":35},{"diffs":[[0,"les\n        "],[1,"    "],[0,"// sorting o"]],"start1":10503,"start2":10503,"length1":24,"length2":28},{"diffs":[[0," tables\n        "],[1," "],[1,"   "],[0,"this.tables.each"]],"start1":10532,"start2":10532,"length1":32,"length2":36},{"diffs":[[0,"(function(table)"],[1," "],[0,"{\n            aT"]],"start1":10568,"start2":10568,"length1":32,"length2":33},{"diffs":[[0,") {\n            "],[1," "],[1,"   "],[0,"aTables.push(tab"]],"start1":10583,"start2":10583,"length1":32,"length2":36},{"diffs":[[0,"table);\n        "],[1," "],[1,"   "],[0,"});\n\n"],[1,"    "],[0,"        aTables "]],"start1":10616,"start2":10616,"length1":37,"length2":45},{"diffs":[[0,"bles;\n\n\n        "],[1,"   "],[1," "],[0,"this.joins.each("]],"start1":10698,"start2":10698,"length1":32,"length2":36},{"diffs":[[0,"h(function(join)"],[1," "],[0,"{\n            aJ"]],"start1":10732,"start2":10732,"length1":32,"length2":33},{"diffs":[[0,"            "],[1,"   "],[1," "],[0,"aJoins.push("]],"start1":10751,"start2":10751,"length1":24,"length2":28},{"diffs":[[0,"(join);\n        "],[1,"   "],[1," "],[0,"});\n\n"],[1,"    "],[0,"        //create"]],"start1":10778,"start2":10778,"length1":37,"length2":45},{"diffs":[[0,"fromSQL\n"],[1,"    "],[0,"        "]],"start1":10824,"start2":10824,"length1":16,"length2":20},{"diffs":[[0,"            "],[1,"    "],[0,"if (k == aTa"]],"start1":10977,"start2":10977,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"fieldSeperator ="]],"start1":11024,"start2":11024,"length1":32,"length2":36},{"diffs":[[0,"'';\n            "],[1,"  "],[-1,"}\n"],[1,"  }\n    "],[0,"            else"]],"start1":11061,"start2":11061,"length1":34,"length2":42},{"diffs":[[0,"         else {\n"],[1,"    "],[0,"                "]],"start1":11090,"start2":11090,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"};\n\n"],[1,"    };\n\n    "],[0,"    "]],"start1":11157,"start2":11157,"length1":12,"length2":20},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"if (bFirst) "]],"start1":11223,"start2":11223,"length1":24,"length2":28},{"diffs":[[0," (bFirst) {\n"],[1,"    "],[0,"            "]],"start1":11241,"start2":11241,"length1":24,"length2":28},{"diffs":[[0," first\n\n"],[1,"    "],[0,"        "]],"start1":11289,"start2":11289,"length1":16,"length2":20},{"diffs":[[0,"                "],[1,"    "],[0,"oJoinTables[aTab"]],"start1":11336,"start2":11336,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"bFirst = false;\n"]],"start1":11399,"start2":11399,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"// check if curr"]],"start1":11436,"start2":11436,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"if ((k + 1) < aT"]],"start1":11514,"start2":11514,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"// get joins whe"]],"start1":11570,"start2":11570,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"for (var h = 0, "]],"start1":11715,"start2":11715,"length1":32,"length2":36},{"diffs":[[0,"h < len; h++) {\n"],[1,"    "],[0,"                "]],"start1":11772,"start2":11772,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"aJoin.push(aJoin"]],"start1":11953,"start2":11953,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":12004,"start2":12004,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"    "],[0,"this.changeLeftR"]],"start1":12191,"start2":12191,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"aJoin.push(aJoin"]],"start1":12262,"start2":12262,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":12313,"start2":12313,"length1":34,"length2":42},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"// check if we h"]],"start1":12366,"start2":12366,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"if (aJoin.length"]],"start1":12417,"start2":12417,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"// yes we have a"]],"start1":12469,"start2":12469,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"leftTable = aTab"]],"start1":12589,"start2":12589,"length1":32,"length2":36},{"diffs":[[0,"les[k];\n"],[1,"    "],[0,"        "]],"start1":12625,"start2":12625,"length1":16,"length2":20},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"// table id merk"]],"start1":12699,"start2":12699,"length1":32,"length2":36},{"diffs":[[0,"table id merken\n"],[1,"    "],[0,"                "]],"start1":12722,"start2":12722,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"for (var j = 0, "]],"start1":12817,"start2":12817,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"if (j == aJoin.l"]],"start1":12920,"start2":12920,"length1":32,"length2":36},{"diffs":[[0,"n.length - 1) {\n"],[1,"    "],[0,"                "]],"start1":12953,"start2":12953,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":13038,"start2":13038,"length1":34,"length2":42},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"fieldSeperator ="]],"start1":13115,"start2":13115,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"};\n"],[1,"    };\n   "],[0,"                "]],"start1":13174,"start2":13174,"length1":35,"length2":42},{"diffs":[[0,"                "],[1," "],[0,"joinType = aJoin"]],"start1":13212,"start2":13212,"length1":32,"length2":33},{"diffs":[[0,"et('joinType');\n"],[1,"    "],[0,"                "]],"start1":13250,"start2":13250,"length1":32,"length2":36},{"diffs":[[0,"fieldSeperator;\n"],[1,"    "],[0,"                "]],"start1":13362,"start2":13362,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"// reset the joi"]],"start1":13417,"start2":13417,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"aJoin = [];\n\n   "]],"start1":13469,"start2":13469,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"if (joinSQL != '"]],"start1":13510,"start2":13510,"length1":32,"length2":36},{"diffs":[[0,"oinSQL != '') {\n"],[1,"    "],[0,"                "]],"start1":13535,"start2":13535,"length1":32,"length2":36},{"diffs":[[0,"QL + ',\\n';\n"],[1,"    "],[0,"            "]],"start1":13598,"start2":13598,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"if (leftTable.ge"]],"start1":13649,"start2":13649,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"// we have an le"]],"start1":13722,"start2":13722,"length1":32,"length2":36},{"diffs":[[0,"leftTable alias\n"],[1,"    "],[0,"                "]],"start1":13756,"start2":13756,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n   "],[0,"                "]],"start1":13924,"start2":13924,"length1":34,"length2":41},{"diffs":[[0,"                "],[1," "],[0,"else {\n"],[1,"    "],[0,"                "]],"start1":13957,"start2":13957,"length1":39,"length2":44},{"diffs":[[0,"     //no alias\n"],[1,"    "],[0,"                "]],"start1":14008,"start2":14008,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[-1,"}\n\n"],[1,"   }\n\n    "],[0,"                "]],"start1":14140,"start2":14140,"length1":35,"length2":43},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"// we have an ri"]],"start1":14245,"start2":14245,"length1":32,"length2":36},{"diffs":[[0,"ightTable alias\n"],[1,"    "],[0,"                "]],"start1":14280,"start2":14280,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":14447,"start2":14447,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"    "],[0,"//no alias\n     "]],"start1":14516,"start2":14516,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"joinSQL = joinSQ"]],"start1":14559,"start2":14559,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n\n"],[1,"    }\n\n   "],[0,"                "]],"start1":14661,"start2":14661,"length1":35,"length2":42},{"diffs":[[0,"                "],[1," "],[0,"// clear joinCon"]],"start1":14695,"start2":14695,"length1":32,"length2":33},{"diffs":[[0,"                "],[1,"    "],[0,"joinCondition = "]],"start1":14743,"start2":14743,"length1":32,"length2":36},{"diffs":[[0," = '';\n\n"],[1,"    "],[0,"        "]],"start1":14776,"start2":14776,"length1":16,"length2":20},{"diffs":[[0,"                "],[1,"    "],[0,"else {\n"],[1,"    "],[0,"                "]],"start1":14814,"start2":14814,"length1":39,"length2":47},{"diffs":[[0,"                "],[1,"    "],[0,"bFirst = true;\n "]],"start1":14928,"start2":14928,"length1":32,"length2":36},{"diffs":[[0," bFirst = true;\n"],[1,"    "],[0,"                "]],"start1":14947,"start2":14947,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"// check for tab"]],"start1":15017,"start2":15017,"length1":32,"length2":36},{"diffs":[[0," for tableAlias\n"],[1,"    "],[0,"                "]],"start1":15045,"start2":15045,"length1":32,"length2":36},{"diffs":[[0,"lias') != '') {\n"],[1,"    "],[0,"                "]],"start1":15115,"start2":15115,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[-1,"}\n"],[1,"   }\n    "],[0,"                "]],"start1":15247,"start2":15247,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"fromSQL = aTable"]],"start1":15316,"start2":15316,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":15383,"start2":15383,"length1":34,"length2":42},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":15461,"start2":15461,"length1":34,"length2":42},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"else {\n"],[1,"    "],[0,"                "]],"start1":15505,"start2":15505,"length1":39,"length2":47},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"// check for tab"]],"start1":15601,"start2":15601,"length1":32,"length2":36},{"diffs":[[0," for tableAlias\n"],[1,"    "],[0,"                "]],"start1":15629,"start2":15629,"length1":32,"length2":36},{"diffs":[[0,"lias') != '') {\n"],[1,"    "],[0,"                "]],"start1":15695,"start2":15695,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[-1,"}\n"],[1,"   }\n    "],[0,"                "]],"start1":15819,"start2":15819,"length1":34,"length2":42},{"diffs":[[0,"         else {\n"],[1,"    "],[0,"                "]],"start1":15856,"start2":15856,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":15943,"start2":15943,"length1":34,"length2":42},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"            }\n  "]],"start1":16013,"start2":16013,"length1":34,"length2":42},{"diffs":[[0,"  }\n            "],[1,"  "],[1,"  "],[0,"else {\n"],[1,"    "],[0,"                "]],"start1":16049,"start2":16049,"length1":39,"length2":47},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"bFirst = true;\n\n"]],"start1":16130,"start2":16130,"length1":32,"length2":36},{"diffs":[[0,"bFirst = true;\n\n"],[1,"    "],[0,"                "]],"start1":16150,"start2":16150,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"if ((k + 1) < aT"]],"start1":16244,"start2":16244,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"// get joins whe"]],"start1":16300,"start2":16300,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"for (var h = 0, "]],"start1":16445,"start2":16445,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"if (oJoinTables."]],"start1":16526,"start2":16526,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"aJoin.push(aJoin"]],"start1":16683,"start2":16683,"length1":32,"length2":36},{"diffs":[[0,"ush(aJoins[h]);\n"],[1,"    "],[0,"                "]],"start1":16710,"start2":16710,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"if (oJoinTables."]],"start1":16764,"start2":16764,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"this.changeLeftR"]],"start1":16921,"start2":16921,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"aJoin.push(aJoin"]],"start1":16992,"start2":16992,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n   "],[0,"                "]],"start1":17043,"start2":17043,"length1":34,"length2":41},{"diffs":[[0,"                "],[1," "],[0,"}\n\n"],[1,"    "],[0,"                "]],"start1":17072,"start2":17072,"length1":35,"length2":40},{"diffs":[[0," we have a join\n"],[1,"    "],[0,"                "]],"start1":17127,"start2":17127,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"// yes we have a"]],"start1":17199,"start2":17199,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"rightTable = aTa"]],"start1":17319,"start2":17319,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"// table id merk"]],"start1":17377,"start2":17377,"length1":32,"length2":36},{"diffs":[[0,"table id merken\n"],[1,"    "],[0,"                "]],"start1":17400,"start2":17400,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"for (var j = 0, "]],"start1":17495,"start2":17495,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"if (j == aJoin.l"]],"start1":17598,"start2":17598,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"fieldSeperator ="]],"start1":17663,"start2":17663,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[-1,"}\n"],[1,"   }\n    "],[0,"                "]],"start1":17716,"start2":17716,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"fieldSeperator ="]],"start1":17793,"start2":17793,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"};\n"],[1,"    };\n    "],[0,"                "]],"start1":17852,"start2":17852,"length1":35,"length2":43},{"diffs":[[0,"                "],[1,"    "],[0,"joinCondition = "]],"start1":17956,"start2":17956,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"}\n\n             "]],"start1":18064,"start2":18064,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"// reset the joi"]],"start1":18095,"start2":18095,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"aJoin = [];\n\n   "]],"start1":18147,"start2":18147,"length1":32,"length2":36},{"diffs":[[0,"   aJoin = [];\n\n"],[1,"    "],[0,"                "]],"start1":18164,"start2":18164,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"if (rightTable.g"]],"start1":18233,"start2":18233,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"// we have an ri"]],"start1":18307,"start2":18307,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"joinSQL = joinSQ"]],"start1":18370,"start2":18370,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":18538,"start2":18538,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"    "],[0,"//no alias\n     "]],"start1":18607,"start2":18607,"length1":32,"length2":36},{"diffs":[[0,"     //no alias\n"],[1,"    "],[0,"                "]],"start1":18622,"start2":18622,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n\n"],[1,"    }\n\n    "],[0,"                "]],"start1":18781,"start2":18781,"length1":35,"length2":43},{"diffs":[[0,"                "],[1,"    "],[0,"joinCondition = "]],"start1":18863,"start2":18863,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n   "],[0,"                "]],"start1":18907,"start2":18907,"length1":34,"length2":41},{"diffs":[[0,"                "],[1," "],[0,"else {\n"],[1,"    "],[0,"                "]],"start1":18936,"start2":18936,"length1":39,"length2":44},{"diffs":[[0,"                "],[1,"    "],[0,"oJoinTables = {}"]],"start1":19011,"start2":19011,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[-1,"}\n"],[1,"   }\n    "],[0,"                "]],"start1":19053,"start2":19053,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"else {\n"],[1,"    "],[0,"                "]],"start1":19097,"start2":19097,"length1":39,"length2":47},{"diffs":[[0,"nd only one\n"],[1,"    "],[0,"            "]],"start1":19165,"start2":19165,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"oJoinTables = {}"]],"start1":19229,"start2":19229,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"}\n            }\n"]],"start1":19267,"start2":19267,"length1":32,"length2":36},{"diffs":[[0,"            "],[1," "],[-1,"}\n"],[1,"   }\n  "],[0,"        "],[1,"  "],[0,"}\n\n        f"]],"start1":19289,"start2":19289,"length1":34,"length2":42},{"diffs":[[0,"     }\n\n        "],[1,"   "],[1," "],[0,"fromSQL = aFromS"]],"start1":19314,"start2":19314,"length1":32,"length2":36},{"diffs":[[0,"oin(', ');\n\n"],[1,"    "],[0,"        if ("]],"start1":19354,"start2":19354,"length1":24,"length2":28},{"diffs":[[0,"romSQL != '') {\n"],[1,"    "],[0,"            join"]],"start1":19400,"start2":19400,"length1":32,"length2":36},{"diffs":[[0,"+ ', ';\n        "],[-1,"}\n\n"],[1,"    }\n\n    "],[0,"        fromSQL "]],"start1":19450,"start2":19450,"length1":35,"length2":43},{"diffs":[[0,"L;\n\n        "],[1,"  "],[1,"  "],[0,"// output fi"]],"start1":19523,"start2":19523,"length1":24,"length2":28},{"diffs":[[0," fields\n"],[1,"    "],[0,"        "]],"start1":19548,"start2":19548,"length1":16,"length2":20},{"diffs":[[0,") {\n            "],[1,"   "],[1," "],[0,"// check if it i"]],"start1":19620,"start2":19620,"length1":32,"length2":36},{"diffs":[[0,"st array member\n"],[1,"    "],[0,"            if ("]],"start1":19664,"start2":19664,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"fieldSeperator ="]],"start1":19733,"start2":19733,"length1":32,"length2":36},{"diffs":[[0,"'';\n            "],[1," "],[-1,"}\n"],[1,"   }\n    "],[0,"            else"]],"start1":19770,"start2":19770,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"fieldSeperator ="]],"start1":19815,"start2":19815,"length1":32,"length2":36},{"diffs":[[0,"perator = ', ';\n"],[1,"    "],[0,"            };\n "]],"start1":19842,"start2":19842,"length1":32,"length2":36},{"diffs":[[0," };\n            "],[1,"    "],[0,"// yes, output\n "]],"start1":19873,"start2":19873,"length1":32,"length2":36},{"diffs":[[0,"put\n            "],[1," "],[1,"   "],[0,"// check alias\n "]],"start1":19904,"start2":19904,"length1":32,"length2":36},{"diffs":[[0,"check alias\n"],[1,"    "],[0,"            "]],"start1":19927,"start2":19927,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"// yes, we have "]],"start1":19998,"start2":19998,"length1":32,"length2":36},{"diffs":[[0," an field alias\n"],[1,"    "],[0,"                "]],"start1":20033,"start2":20033,"length1":32,"length2":36},{"diffs":[[0,"or;\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            else"]],"start1":20195,"start2":20195,"length1":34,"length2":42},{"diffs":[[0,"            "],[1,"    "],[0,"// no field "]],"start1":20244,"start2":20244,"length1":24,"length2":28},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"selectFieldsSQL "]],"start1":20278,"start2":20278,"length1":32,"length2":36},{"diffs":[[0,"or;\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"        }\n\n     "]],"start1":20383,"start2":20383,"length1":34,"length2":42},{"diffs":[[0," }\n\n        "],[1,"    "],[0,"// criteria\n"]],"start1":20416,"start2":20416,"length1":24,"length2":28},{"diffs":[[0,"    // criteria\n"],[1,"    "],[0,"        for (var"]],"start1":20428,"start2":20428,"length1":32,"length2":36},{"diffs":[[0,") {\n            "],[1,"    "],[0,"if (i == 0) {\n  "]],"start1":20510,"start2":20510,"length1":32,"length2":36},{"diffs":[[0,"  if (i == 0) {\n"],[1,"    "],[0,"                "]],"start1":20528,"start2":20528,"length1":32,"length2":36},{"diffs":[[0," ';\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            else"]],"start1":20600,"start2":20600,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"criteriaSQL = cr"]],"start1":20645,"start2":20645,"length1":32,"length2":36},{"diffs":[[0,"L + 'AND ';\n"],[1,"    "],[0,"            "]],"start1":20689,"start2":20689,"length1":24,"length2":28},{"diffs":[[0,"  }\n            "],[1,"    "],[0,"if (i == aCriter"]],"start1":20715,"start2":20715,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"fieldSeperator ="]],"start1":20774,"start2":20774,"length1":32,"length2":36},{"diffs":[[0,"'';\n            "],[-1,"}\n"],[1,"    }\n  "],[0,"            else"]],"start1":20811,"start2":20811,"length1":34,"length2":40},{"diffs":[[0,"}\n              "],[1,"  "],[0,"else {\n"],[1,"    "],[0,"                "]],"start1":20831,"start2":20831,"length1":39,"length2":45},{"diffs":[[0,"n';\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            crit"]],"start1":20895,"start2":20895,"length1":34,"length2":42},{"diffs":[[0,"erator;\n        "],[1,"    "],[0,"}\n\n        // gr"]],"start1":21051,"start2":21051,"length1":32,"length2":36},{"diffs":[[0," }\n\n        "],[1," "],[1,"   "],[0,"// group by\n"]],"start1":21070,"start2":21070,"length1":24,"length2":28},{"diffs":[[0,"// group by\n"],[1,"    "],[0,"        for "]],"start1":21086,"start2":21086,"length1":24,"length2":28},{"diffs":[[0,") {\n            "],[1,"   "],[1," "],[0,"// check if it i"]],"start1":21161,"start2":21161,"length1":32,"length2":36},{"diffs":[[0,"ber\n            "],[1,"    "],[0,"if (i == aGroupF"]],"start1":21217,"start2":21217,"length1":32,"length2":36},{"diffs":[[0,"s.length - 1) {\n"],[1,"    "],[0,"                "]],"start1":21257,"start2":21257,"length1":32,"length2":36},{"diffs":[[0,"'';\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            else"]],"start1":21310,"start2":21310,"length1":34,"length2":42},{"diffs":[[0,"         else {\n"],[1,"    "],[0,"                "]],"start1":21339,"start2":21339,"length1":32,"length2":36},{"diffs":[[0," ';\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            if ("]],"start1":21394,"start2":21394,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"    "],[0,"groupBySQL = '\\n"]],"start1":21446,"start2":21446,"length1":32,"length2":36},{"diffs":[[0," ';\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            grou"]],"start1":21490,"start2":21490,"length1":34,"length2":42},{"diffs":[[0,"        "],[-1,"}\n\n"],[1,"    }\n\n   "],[0,"        "],[1," "],[0,"// order"]],"start1":21606,"start2":21606,"length1":27,"length2":35},{"diffs":[[0,"// order by\n"],[1,"    "],[0,"        for "]],"start1":21633,"start2":21633,"length1":24,"length2":28},{"diffs":[[0,") {\n            "],[1,"    "],[0,"// check if it i"]],"start1":21708,"start2":21708,"length1":32,"length2":36},{"diffs":[[0,"ber\n            "],[1," "],[1,"   "],[0,"if (i == aOrderF"]],"start1":21764,"start2":21764,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"fieldSeperator ="]],"start1":21820,"start2":21820,"length1":32,"length2":36},{"diffs":[[0,"'';\n            "],[1,"  "],[-1,"}\n"],[1,"  }\n    "],[0,"            else"]],"start1":21857,"start2":21857,"length1":34,"length2":42},{"diffs":[[0,"         else {\n"],[1,"    "],[0,"                "]],"start1":21886,"start2":21886,"length1":32,"length2":36},{"diffs":[[0," ';\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"        }\n\n     "]],"start1":21941,"start2":21941,"length1":34,"length2":42},{"diffs":[[0," }\n\n        "],[1," "],[1,"   "],[0,"return sqlOu"]],"start1":21974,"start2":21974,"length1":24,"length2":28},{"diffs":[[0,"rBySQL;\n    "],[-1,"},\n"],[1,"    },\n    "],[0,"    getJoins"]],"start1":22068,"start2":22068,"length1":27,"length2":35},{"diffs":[[0,"unction(tableId)"],[1," "],[0,"{\n"],[1,"    "],[0,"        var aRet"]],"start1":22115,"start2":22115,"length1":34,"length2":39},{"diffs":[[0,"n = [];\n        "],[1,"   "],[1," "],[0,"this.joins.each("]],"start1":22156,"start2":22156,"length1":32,"length2":36},{"diffs":[[0,"h(function(join)"],[1," "],[0,"{\n"],[1,"    "],[0,"            if ("]],"start1":22190,"start2":22190,"length1":34,"length2":39},{"diffs":[[0,"            "],[1,"    "],[0,"aReturn.push"]],"start1":22310,"start2":22310,"length1":24,"length2":28},{"diffs":[[0,"n);\n            "],[-1,"}\n"],[1,"    }\n    "],[0,"        });\n    "]],"start1":22342,"start2":22342,"length1":34,"length2":42},{"diffs":[[0,"    });\n        "],[1," "],[1,"   "],[0,"return aReturn;\n"]],"start1":22372,"start2":22372,"length1":32,"length2":36},{"diffs":[[0,"Return;\n    "],[-1,"},\n"],[1,"    },\n   "],[0,"    "],[1," "],[0,"removeTableB"]],"start1":22400,"start2":22400,"length1":31,"length2":39},{"diffs":[[0,"unction(tableID)"],[1," "],[0,"{\n"],[1,"    "],[0,"        var tabl"]],"start1":22445,"start2":22445,"length1":34,"length2":39},{"diffs":[[0,"le;\n        "],[1,"   "],[1," "],[0,"table = this"]],"start1":22483,"start2":22483,"length1":24,"length2":28},{"diffs":[[0,"bleID);\n        "],[1,"    "],[0,"this.tables.remo"]],"start1":22529,"start2":22529,"length1":32,"length2":36},{"diffs":[[0,".remove(table);\n"],[1,"    "],[0,"    },\n    getTa"]],"start1":22560,"start2":22560,"length1":32,"length2":36},{"diffs":[[0," },\n    "],[1," "],[1,"   "],[0,"getTable"]],"start1":22583,"start2":22583,"length1":16,"length2":20},{"diffs":[[0,"tableID)"],[1," "],[0,"{\n"],[1,"    "],[0,"        "]],"start1":22618,"start2":22618,"length1":18,"length2":23},{"diffs":[[0,"bleID);\n    "],[1," "],[-1,"},\n"],[1,"   },\n    "],[0,"    removeFi"]],"start1":22670,"start2":22670,"length1":27,"length2":35},{"diffs":[[0,"tion(id)"],[1," "],[0,"{\n      "]],"start1":22718,"start2":22718,"length1":16,"length2":17},{"diffs":[[0,") {\n        "],[1,"  "],[1,"  "],[0,"var field;\n "]],"start1":22725,"start2":22725,"length1":24,"length2":28},{"diffs":[[0," field;\n"],[1,"    "],[0,"        "]],"start1":22744,"start2":22744,"length1":16,"length2":20},{"diffs":[[0,"etById(id);\n"],[1,"    "],[0,"        this"]],"start1":22785,"start2":22785,"length1":24,"length2":28},{"diffs":[[0,"field);\n    "],[-1,"},\n"],[1,"    },\n    "],[0,"    removeFi"]],"start1":22828,"start2":22828,"length1":27,"length2":35},{"diffs":[[0,"tableId)"],[1," "],[0,"{\n      "]],"start1":22887,"start2":22887,"length1":16,"length2":17},{"diffs":[[0,") {\n        "],[1," "],[1,"   "],[0,"var aRecords"]],"start1":22894,"start2":22894,"length1":24,"length2":28},{"diffs":[[0," aRecords = [];\n"],[1,"    "],[0,"        this.fie"]],"start1":22913,"start2":22913,"length1":32,"length2":36},{"diffs":[[0,"n(model)"],[1," "],[0,"{\n      "]],"start1":22965,"start2":22965,"length1":16,"length2":17},{"diffs":[[0,"            "],[1," "],[1,"   "],[0,"if (model.ge"]],"start1":22976,"start2":22976,"length1":24,"length2":28},{"diffs":[[0,"        "],[1,"    "],[0,"aRecords"]],"start1":23039,"start2":23039,"length1":16,"length2":20},{"diffs":[[0,"l);\n            "],[1,"   "],[1," "],[0,"}\n"],[1,"    "],[0,"        });\n    "]],"start1":23069,"start2":23069,"length1":34,"length2":42},{"diffs":[[0,"            });\n"],[1,"    "],[0,"        this.fie"]],"start1":23091,"start2":23091,"length1":32,"length2":36},{"diffs":[[0,"cords);\n    "],[-1,"},\n"],[1,"    },\n    "],[0,"    addTable"]],"start1":23141,"start2":23141,"length1":27,"length2":35},{"diffs":[[0,"n(table)"],[1," "],[0,"{\n      "]],"start1":23185,"start2":23185,"length1":16,"length2":17},{"diffs":[[0,"able) {\n        "],[1," "],[1,"   "],[0,"this.tables.add("]],"start1":23188,"start2":23188,"length1":32,"length2":36},{"diffs":[[0,"add(table);\n"],[1,"    "],[0,"    },\n    a"]],"start1":23220,"start2":23220,"length1":24,"length2":28},{"diffs":[[0,"\n        },\n    "],[1,"  "],[1,"  "],[0,"addFieldRecord: "]],"start1":23231,"start2":23231,"length1":32,"length2":36},{"diffs":[[0,"bOutput)"],[1," "],[0,"{\n      "]],"start1":23284,"start2":23284,"length1":16,"length2":17},{"diffs":[[0,"tput) {\n        "],[1,"  "],[1,"  "],[0,"var tableAlias, "]],"start1":23287,"start2":23287,"length1":32,"length2":36},{"diffs":[[0,"ession;\n        "],[1,"   "],[1," "],[0,"// get the table"]],"start1":23334,"start2":23334,"length1":32,"length2":36},{"diffs":[[0," the tableAlias\n"],[1,"    "],[0,"        tableAli"]],"start1":23360,"start2":23360,"length1":32,"length2":36},{"diffs":[[0,"('tableAlias');\n"],[1,"    "],[0,"        // build"]],"start1":23445,"start2":23445,"length1":32,"length2":36},{"diffs":[[0,"ression\n        "],[1,"    "],[0,"// check if the "]],"start1":23489,"start2":23489,"length1":32,"length2":36},{"diffs":[[0," string\n        "],[1,"    "],[0,"if (tableAlias !"]],"start1":23551,"start2":23551,"length1":32,"length2":36},{"diffs":[[0,") {\n            "],[1,"  "],[1,"  "],[0,"// alias is not "]],"start1":23591,"start2":23591,"length1":32,"length2":36},{"diffs":[[0,"an empty string\n"],[1,"    "],[0,"            expr"]],"start1":23627,"start2":23627,"length1":32,"length2":36},{"diffs":[[0,"ield');\n        "],[1,"   "],[1," "],[0,"}\n"],[1,"    "],[0,"        else {\n "]],"start1":23704,"start2":23704,"length1":34,"length2":42},{"diffs":[[0,"         else {\n"],[1,"    "],[0,"            // a"]],"start1":23729,"start2":23729,"length1":32,"length2":36},{"diffs":[[0,"an empty string\n"],[1,"    "],[0,"            expr"]],"start1":23773,"start2":23773,"length1":32,"length2":36},{"diffs":[[0,"ield');\n        "],[1,"    "],[0,"};\n        // ge"]],"start1":23863,"start2":23863,"length1":32,"length2":36},{"diffs":[[0,"     };\n        "],[1,"  "],[1,"  "],[0,"// get a new fie"]],"start1":23878,"start2":23878,"length1":32,"length2":36},{"diffs":[[0,"nce\n        "],[1,"   "],[1," "],[0,"model = this"]],"start1":23922,"start2":23922,"length1":24,"length2":28},{"diffs":[[0,"NewField();\n"],[1,"    "],[0,"        // s"]],"start1":23954,"start2":23954,"length1":24,"length2":28},{"diffs":[[0,"ression\n        "],[1,"    "],[0,"model.set('expre"]],"start1":23992,"start2":23992,"length1":32,"length2":36},{"diffs":[[0,"n);\n        "],[1,"    "],[0,"// set outpu"]],"start1":24045,"start2":24045,"length1":24,"length2":28},{"diffs":[[0,"default\n        "],[1," "],[1,"   "],[0,"model.set('outpu"]],"start1":24088,"start2":24088,"length1":32,"length2":36},{"diffs":[[0,"utput);\n"],[1,"    "],[0,"        "]],"start1":24130,"start2":24130,"length1":16,"length2":20},{"diffs":[[0,"removed\n        "],[1,"   "],[1," "],[0,"model.set('id', "]],"start1":24224,"start2":24224,"length1":32,"length2":36},{"diffs":[[0,"ord.get('id'));\n"],[1,"    "],[0,"        // set t"]],"start1":24263,"start2":24263,"length1":32,"length2":36},{"diffs":[[0,"e field\n        "],[1,"    "],[0,"model.set('field"]],"start1":24300,"start2":24300,"length1":32,"length2":36},{"diffs":[[0,"eld'));\n        "],[1," "],[1,"   "],[0,"// copy tableId "]],"start1":24353,"start2":24353,"length1":32,"length2":36},{"diffs":[[0," model instance\n"],[1,"    "],[0,"        model.se"]],"start1":24399,"start2":24399,"length1":32,"length2":36},{"diffs":[[0,"eId'));\n        "],[1,"   "],[1," "],[0,"// copy cmp id o"]],"start1":24464,"start2":24464,"length1":32,"length2":36},{"diffs":[[0,"nstance\n        "],[1,"    "],[0,"model.set('extCm"]],"start1":24536,"start2":24536,"length1":32,"length2":36},{"diffs":[[0,"xtCmpId'));\n"],[1,"    "],[0,"        this"]],"start1":24591,"start2":24591,"length1":24,"length2":28},{"diffs":[[0,"model);\n    "],[-1,"},\n"],[1,"    },\n    "],[0,"    addField"]],"start1":24629,"start2":24629,"length1":27,"length2":35},{"diffs":[[0,"n(field)"],[1," "],[0,"{\n      "]],"start1":24673,"start2":24673,"length1":16,"length2":17},{"diffs":[[0,"ield) {\n        "],[1," "],[1,"   "],[0,"this.fields.add("]],"start1":24676,"start2":24676,"length1":32,"length2":36},{"diffs":[[0,"add(field);\n"],[1,"    "],[0,"    },\n    g"]],"start1":24708,"start2":24708,"length1":24,"length2":28},{"diffs":[[0," },\n    "],[1,"  "],[1,"  "],[0,"getNewFi"]],"start1":24727,"start2":24727,"length1":16,"length2":20},{"diffs":[[0,"nction()"],[1," "],[0,"{\n"],[1,"    "],[0,"        "]],"start1":24754,"start2":24754,"length1":18,"length2":23},{"diffs":[[0,"odel');\n    "],[1,"   "],[1," "],[0,"},\n"],[1,"    "],[0,"    removeJo"]],"start1":24824,"start2":24824,"length1":27,"length2":35},{"diffs":[[0,"(joinID)"],[1," "],[0,"{\n      "]],"start1":24875,"start2":24875,"length1":16,"length2":17},{"diffs":[[0,"inID) {\n        "],[1,"   "],[1," "],[0,"var join;\n      "]],"start1":24878,"start2":24878,"length1":32,"length2":36},{"diffs":[[0,"r join;\n"],[1,"    "],[0,"        "]],"start1":24900,"start2":24900,"length1":16,"length2":20},{"diffs":[[0,"oinID);\n        "],[1,"    "],[0,"this.joins.remov"]],"start1":24947,"start2":24947,"length1":32,"length2":36},{"diffs":[[0,"(join);\n    "],[1," "],[-1,"},\n"],[1,"   },\n    "],[0,"    addJoin:"]],"start1":24984,"start2":24984,"length1":27,"length2":35},{"diffs":[[0,"on(join)"],[1," "],[0,"{\n      "]],"start1":25026,"start2":25026,"length1":16,"length2":17},{"diffs":[[0,"join) {\n        "],[1," "],[1,"   "],[0,"this.joins.add(j"]],"start1":25029,"start2":25029,"length1":32,"length2":36},{"diffs":[[0,"n);\n    "],[-1,"},\n"],[1,"    },\n   "],[0,"    "],[1," "],[0,"arrayRem"]],"start1":25067,"start2":25067,"length1":23,"length2":31},{"diffs":[[0,"erValue)"],[1," "],[0,"{\n"],[1,"    "],[0,"        "]],"start1":25139,"start2":25139,"length1":18,"length2":23},{"diffs":[[0,"rn;\n        "],[1,"   "],[1," "],[0,"aReturn = Ex"]],"start1":25171,"start2":25171,"length1":24,"length2":28},{"diffs":[[0,"on(item)"],[1," "],[0,"{\n"],[1,"    "],[0,"        "]],"start1":25227,"start2":25227,"length1":18,"length2":23},{"diffs":[[0,"bRemove = true;\n"],[1,"    "],[0,"            if ("]],"start1":25258,"start2":25258,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"bRemove "]],"start1":25341,"start2":25341,"length1":16,"length2":20},{"diffs":[[0,"se;\n            "],[1,"    "],[0,"}\n            re"]],"start1":25366,"start2":25366,"length1":32,"length2":36},{"diffs":[[0,"            "],[1," "],[1,"   "],[0,"return bRemo"]],"start1":25388,"start2":25388,"length1":24,"length2":28},{"diffs":[[0,"Remove;\n        "],[1,"    "],[0,"});\n        retu"]],"start1":25412,"start2":25412,"length1":32,"length2":36},{"diffs":[[0,"    });\n        "],[1,"   "],[1," "],[0,"return aReturn\n "]],"start1":25428,"start2":25428,"length1":32,"length2":36},{"diffs":[[0,"urn\n    "],[-1,"}\n"],[1,"    }\n    "],[0,"});\n\n}()"]],"start1":25459,"start2":25459,"length1":18,"length2":26}]],"length":25487,"saved":false}
