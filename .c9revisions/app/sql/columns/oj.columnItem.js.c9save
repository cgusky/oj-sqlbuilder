{"ts":1368217112538,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1368218656716,"patch":[[{"diffs":[[1," icon: 'resources/images/up_arrow.gif',\n                tooltip: 'Move Column Up',\n                getClass: function(value, metadata, record) {\n                    var store, index;\n                    store = record.store;\n                    index = store.indexOf(record);\n                    if (index == 0) {\n                        return 'x-action-icon-disabled';\n                    }\n                    else {\n                        return 'x-grid-center-icon';\n                    }\n                },\n                handler: function(grid, rowIndex, colIndex) {\n                    var rec = grid.getStore().getAt(rowIndex);\n                    this.moveGridRow(grid, rec, rowIndex, - 1);\n                }"]],"start1":0,"start2":0,"length1":0,"length2":720}]],"length":720,"saved":false}
{"ts":1368218663853,"patch":[[{"diffs":[[0," "],[1,"/*"],[0,"icon: 'r"]],"start1":0,"start2":0,"length1":9,"length2":11},{"diffs":[[0," - 1);\n                }"],[1,"*/"]],"start1":698,"start2":698,"length1":24,"length2":26}]],"length":724,"saved":false}
{"ts":1368218667193,"patch":[[{"diffs":[[0,"     }*/"],[1,"\n                \n                "]],"start1":716,"start2":716,"length1":8,"length2":42}]],"length":758,"saved":false}
{"ts":1368218677550,"patch":[[{"diffs":[[0,"       \n                "],[1,"/* global OJ:true, window:true, Ext:true */\n\n(function _gridColumnIIFE(){\n\n    /**\n     * Private grid column class constructor\n    */\n    var GridColumn = function (text, editor, flex) {\n        var that = OJ.columns.column({\n                xtype: OJ.constants.xtypes.gridcolumn,\n                flex: flex || 0.125,\n                editor: editor,\n                text: text\n            });\n\n        return that;\n    };\n\n    OJ.instanceof.lift('GridColumn', GridColumn);\n\n    /**\n     * Create a check column\n     * @param sortable {Boolean} [sortable=true] Is Column Sortable\n     * @param text {String} Column Name\n     * @param menuDisabled {Boolean} [menuDisabled=false] Is Menu Disabled\n     * @param flex {Number} [flex=0.125] Relative width of the column\n     * @param editor {String} If column is editable, the type of editor\n    */\n    OJ.columns.lift('gridColumn', function (sortable, text, menuDisabled, flex, editor){\n        if(arguments.length === 0) {\n            throw new Error('Cannot create a column without parameters');\n        }\n\n        var ret = new GridColumn(text, editor, flex);\n        ret.menuDisabled = menuDisabled;\n        ret.sortable = sortable;\n        return ret;\n    });\n\n\n    }());"]],"start1":734,"start2":734,"length1":24,"length2":1246}]],"length":1980,"saved":false}
{"ts":1368218686323,"patch":[[{"diffs":[[0,"on _"],[-1,"gridC"],[1,"c"],[0,"olumnI"],[1,"teI"],[0,"IFE("]],"start1":810,"start2":810,"length1":19,"length2":18}]],"length":1979,"saved":false}
{"ts":1368218686777,"patch":[[{"diffs":[[0,"    }*/\n"],[-1,"                "],[0,"\n       "]],"start1":717,"start2":717,"length1":32,"length2":16},{"diffs":[[0,"olumnIte"],[1,"m"],[0,"IIFE(){\n"]],"start1":799,"start2":799,"length1":16,"length2":17}]],"length":1964,"saved":false}
