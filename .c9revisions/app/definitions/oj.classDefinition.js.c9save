{"ts":1368234840880,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/* global window, OJ, Ext:true */\n\n(function _classDefinitionIIFE() {\n\n    /**\n     * Private constructor to create an object suitable for defining a new class\n     * @param extend {String} The ExtJS class to extend/copy\n     * @param requires {Array} [requires] An array of dependencies\n     * @param alias {Array} [alias] An array of alternate names for this class\n     * @param id {String} [id] A unique id for this class\n     * @param store {OJ.store} [store] A data store for this class\n     * @param plugins [Array] [plugins] An array of plugins to initialize with new instances of this class\n    */\n    var ClassDefinition = function(extend, requires, alias, id, store, plugins) {\n        var that = this;\n\n        if(extend) {\n            Object.defineProperties(that, {\n                extend:{\n                    value: extend,\n                    writable: true,\n                    configurable: true,\n                    enumerable: true\n\n                }\n            });\n        }\n        if(requires) {\n            Object.defineProperties(that, {\n                requires:{\n                    value: requires,\n                    writable: true,\n                    configurable: true,\n                    enumerable: true\n\n                }\n            });\n        }\n        if(alias) {\n            Object.defineProperties(that, {\n                alias:{\n                    value: alias,\n                    writable: true,\n                    configurable: true,\n                    enumerable: true\n\n                }\n            });\n        }\n        if(id) {\n            Object.defineProperties(that, {\n                id:{\n                    value: id,\n                    writable: true,\n                    configurable: true,\n                    enumerable: true\n\n                }\n            });\n        }\n        if(plugins) {\n            Object.defineProperties(that, {\n                plugins:{\n                    value: plugins,\n                    writable: true,\n                    configurable: true,\n                    enumerable: true\n\n                }\n            });\n        }\n        if(store) {\n            Object.defineProperties(that, {\n                store:{\n                    value: store,\n                    writable: true,\n                    configurable: true,\n                    enumerable: true\n\n                }\n            });\n        }\n        return that;\n    };\n\n    OJ.instanceof.lift('ClassDefinition', ClassDefinition);\n\n    /**\n     * Define declares a new class on the ExtJs namespace\n     * @param def {Object} defintion object with possible properties: def.extend, def.requires, def.alias, def.id, def.store, def.plugins\n    */\n    OJ.lift('classDefinition', function(def) {\n        if(!def) {\n            throw new Error('Cannot create a definition without parameters.')\n        }\n        var ret = new ClassDefinition(def.extend, def.requires, def.alias, def.id, def.store, def.plugins);\n        return ret;\n    });\n\n}());"]],"start1":0,"start2":0,"length1":0,"length2":3000}]],"length":3000}
{"contributors":[],"silentsave":true,"ts":1368234910545,"patch":[[{"diffs":[[1,"/* jshint undef: true, unused: true */\n"],[0,"/* globa"]],"start1":0,"start2":0,"length1":8,"length2":47},{"diffs":[[0,"obal"],[1," OJ:true,"],[0," window"],[-1,", OJ"],[1,":true"],[0,", Ex"]],"start1":44,"start2":44,"length1":19,"length2":29},{"diffs":[[0,"ue, Ext:true"],[1,", $: true"],[0," */\n\n(functi"]],"start1":67,"start2":67,"length1":24,"length2":33}]],"length":3058,"saved":false}
