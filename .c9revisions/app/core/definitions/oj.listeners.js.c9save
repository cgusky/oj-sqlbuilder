{"ts":1368550121323,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1368550205181,"patch":[[{"diffs":[[1,"/* jshint undef: true, unused: true */\r\n/* global Csw2:true, window:true, Ext:true, $: true */\r\n\r\n(function _listenerIIFE() {\r\n\r\n     /**\r\n      * The private constructor for a Listeners object.\r\n      * @param listenerType {String} The name of the listener to create\r\n      * @param namespace {String} The NameSpace to which the listener belongs\r\n     */\r\n      var Listeners = function (listenerType, namespace) {\r\n          if (!(Csw2.constants[listenerType])) {\r\n              throw new Error('No listener type for \"' + listenerType + '\" has been defined.');\r\n          }\r\n          if (!(Csw2[namespace])) {\r\n              throw new Error('No listener class \"' + namespace + '\" has been defined.');\r\n          }\r\n          \r\n          var that = this;\r\n          var listeners = [];\r\n          Object.defineProperties(that, {\r\n              add: {\r\n                  /**\r\n                   * For a known listener name, apply the appropriate arguments as defined by Ext to a method wrapper to be assigned as the listener.\r\n                   * @param name {Csw2.constants[listenerType]} Name of the listener\r\n                   * @param method {Function} callback method\r\n                  */\r\n                  value: function(name, method) {\r\n                      if (!(Csw2.constants[listenerType].has(name))) {\r\n                          throw new Error(listenerType + ' type ' + name + ' is not supported.');\r\n                      }\r\n                      if (-1 !== listeners.indexOf(name)) {\r\n                          throw new Error( namespace + ' already containts a listenere for ' + name + '.');\r\n                      }\r\n                      listeners.push(name);\r\n                      \r\n                      var listener = Csw2[namespace].listeners[name](method);\r\n\r\n                      Object.defineProperty(that, name, {\r\n                          value: listener,\r\n                          writable: true,\r\n                          configurable: true,\r\n                          enumerable: true\r\n                      });\r\n\r\n                      return that;\r\n                  }\r\n              }\r\n          });\r\n          return that;\r\n      };\r\n\r\n      Csw2.instanceof.lift('Listeners', Listeners);\r\n\r\n     /**\r\n      * Create a new listeners collection. This returns a listeners object with an add method.\r\n      * @param listenerType {String} The name of the listener to create\r\n      * @param namespace {String} The NameSpace to which the listener belongs\r\n     */\r\n      Csw2.lift('makeListeners', function (listenerType, namespace) {\r\n          var ret = new Listeners(listenerType, namespace);\r\n          return ret;\r\n      });\r\n\r\n\r\n      }());"]],"start1":0,"start2":0,"length1":0,"length2":2685}]],"length":2685,"saved":false}
{"ts":1368550212775,"patch":[[{"diffs":[[0," global "],[-1,"Csw2"],[1,"OJ"],[0,":true, w"]],"start1":42,"start2":42,"length1":20,"length2":18},{"diffs":[[0,"          if (!("],[-1,"Csw2"],[1,"OJ"],[0,".constants[liste"]],"start1":415,"start2":415,"length1":36,"length2":34},{"diffs":[[0,"  if (!("],[-1,"Csw2"],[1,"OJ"],[0,"[namespa"]],"start1":581,"start2":581,"length1":20,"length2":18},{"diffs":[[0,"m name {"],[-1,"Csw2"],[1,"OJ"],[0,".constan"]],"start1":1048,"start2":1048,"length1":20,"length2":18},{"diffs":[[0,"  if (!("],[-1,"Csw2"],[1,"OJ"],[0,".constan"]],"start1":1262,"start2":1262,"length1":20,"length2":18},{"diffs":[[0,"tener = "],[-1,"Csw2"],[1,"OJ"],[0,"[namespa"]],"start1":1729,"start2":1729,"length1":20,"length2":18},{"diffs":[[0,"\r\n      "],[-1,"Csw2"],[1,"OJ"],[0,".instanc"]],"start1":2168,"start2":2168,"length1":20,"length2":18},{"diffs":[[0,"    "],[-1,"Csw2"],[1,"OJ"],[0,".lif"]],"start1":2492,"start2":2492,"length1":12,"length2":10}]],"length":2669,"saved":false}
{"ts":1368550214529,"patch":[[{"diffs":[[0,"     }\r\n"],[-1,"          "],[0,"\r\n      "]],"start1":704,"start2":704,"length1":26,"length2":16},{"diffs":[[0,"name);\r\n"],[-1,"                      "],[0,"\r\n      "]],"start1":1658,"start2":1658,"length1":38,"length2":16}]],"length":2637,"saved":false}
